@page
@model AgapayAidSystem.Pages.EvacuationCenter.IndexModel
@{
	ViewData["Title"] = "Evacuation Center";
}

@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<div class="content">
	<!-- Breadcrumb -->
    <div class="row p-2">
        <div class="breadcrumb-container">
            <div aria-label="breadcrumb">
                <ol class="breadcrumbs">
                    <li><a href="/index"><i class="bi bi-house-door-fill" style="padding: 5px;"></i>Home</a></li>
                    <li class="divider"> > </li>
                    <li><a class="active">Evacuation Center</a></li>
                </ol>
            </div>
        </div>
    </div>
	
	<!-- Title and Add Button-->
	<div class="row p-2">
		<div class="col d-flex align-items-center">
			<h1>Evacuation Center</h1>
		</div>

		<div class="col-auto d-flex justify-content-between align-items-center">
			<div class="d-flex justify-content-end align-items-center">
				<a class="btn btn-primary mb-2" href="/evacuationcenter/add">
					<i class="bi bi-plus-circle pt" style="padding: 5px;"></i>
					Add Evacuation Center
				</a>
			</div>
		</div>
	</div>

	<!-- Table -->
	<div class="row p-2">
		<div class="col-lg-12">
			<table id="center-table" class="table display compact order-column table-hover" cellspacing="0" width="100%">
				<thead>
					<tr style="vertical-align: top;">
						<th>#</th>
						<th>Evacuation Center</th>
						<th>Type</th>
						<th>Barangay</th>
						<th style="text-align: center;">Capacity</th>
						<th style="text-align: center;">Status</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@{ var counter = 1; }
					@foreach (var item in Model.listEvacuation)
					{
						<tr>
							<td width="5%">@counter</td>
							<td width="25%">@item.centerName</td>
							<td width="20%">@item.centerType</td>
							<td width="25%">@item.barangayName</td>
							<td width="10%" style="text-align: center;">@item.maxCapacity</td>
							<td width="10%" style="text-align: center;">
								@if (@item.status == "Active")
								{
									<span class="badge bg-success">@item.status</span>
								}
								else if (@item.status == "Inactive")
								{
									<span class="badge rounded-pill bg-light">@item.status</span>
								}
							</td>
							<td width="5%">
								<a class="btn btn-success edit-button" href="/evacuationcenter/profile/index?centerID=@item.centerID">
									View
								</a>
							</td>
						</tr>
						counter++;
					}
				</tbody>
			</table>
		</div>
	</div>
</div>

<!-- Making the table responsive -->
<script>
	$(document).ready(function () {
		var table = $('#center-table').DataTable({
			responsive: true,
			columnDefs: [
				{ "orderable": true, "targets": [0, 1, 3, 4] }, // Sortable columns
				{ "orderable": false, "targets": [2, 5, 6] } // Non-sortable columns
			]
		});

		// Adding filters to specific columns
		table.columns([2, 3, 5]).every(function () {
			var column = this;
			var select = $('<select><option value=""></option></select>')
				.appendTo($(column.header()))
				.on('change', function () {
					var val = $.fn.dataTable.util.escapeRegex(
						$(this).val()
					);

					column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
				});

			column.data().unique().sort().each(function (d, j) {
				// Only add the options "Active" and "Inactive" for the "Status" column
				if (column.index() === 5) {
					// Set specific filter options only if they haven't been added
					if (select.find("option[value='Active']").length == 0) {
						select.append('<option value="Active">Active</option>');
					}
					if (select.find("option[value='Inactive']").length == 0) {
						select.append('<option value="Inactive">Inactive</option>');
					}
				}
				// For other columns, show all unique values as filter options
				else {
					select.append('<option value="' + d + '">' + d + '</option>');
				}
			});
		});
	});
</script>
