@page
@model AgapayAidSystem.Pages.account.SettingsModel
@{
    ViewData["Title"] = "Settings";
}

@if (Model.UserType == "Admin")
{
    Layout = "_Layout";
}
else if (Model.UserType == "LGU Staff")
{
    Layout = "_Layout - LGU";
}
else if (Model.UserType == "EC Staff")
{
    Layout = "_Layout - ECStaff";
}
else
{
    Layout = "_Login";
}

<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<style>
    .label-col {
        flex: 0 0 200px;
    }

    .edit-controls {
        display: none;
    }

        .edit-controls button {
            margin-left: 10px;
            padding: 5px 10px;
        }

    .mobile-number-edit-controls {
        display: none;
    }

        .mobile-number-edit-controls button {
            margin-left: 10px;
            padding: 5px 10px;
        }

    .password-controls button {
        margin-left: 10px;
        padding: 5px 10px;
    }

    .short-dropdown {
        max-width: 210px; /* Adjust the width as needed */
    }
    
    .email {
        width: 300px;
    }
</style>

<div class="row mb-2">
    <div class="col-lg-12 ec-info">
        <div class="container">
            @if (Model.UserType == "EC Staff" || Model.UserType == "LGU Staff")
            {
                <form id="contactInformationForm" method="POST" asp-page-handler="ContactInformation">
                    <!-- Title -->
                    <div class="col-12 d-flex align-items-center justify-content-between">
                        <h1><i class="bi bi-gear" style="padding: 0 5px 0 5px;"></i>Settings</h1>
                    </div>
                    <br />

                    <!-- Contact Information -->
                    <h4 class="d-flex justify-content-between align-items-center mb-3">Contact Information</h4>
                    <div class="col">
                        <ul class="list-group mb-3">
                            <li class="list-group-item d-flex lh-sm">
                                <div class="label-col"><h6 class="my-0">Email Address</h6></div>
                                <div class="input-col">
                                    <input type="email" class="form-control email" name="emailAddress" id="emailAddress" value="@Model.profileInfo.emailAddress" required maxlength="65" placeholder="example@email.com">
                                    <small id="emailAddressError" class="text-danger" style="display:none;">Invalid email address format</small>
                                </div>
                            </li>
                            <li class="list-group-item d-flex lh-sm">
                                <div class="label-col"><h6 class="my-0">Mobile Number</h6></div>
                                <div class="input-col">
                                    <input type="tel" class="form-control" name="mobileNum" id="mobileNum" value="@Model.profileInfo.mobileNum" required maxlength="11" pattern="[0-9]{11}" placeholder="09XXXXXXXXX">
                                    <small id="mobileNumError" class="text-danger" style="display:none;">Invalid mobile number format</small>
                                </div>
                            </li>
                        </ul>
                    </div>


                    @if (Model.UserType == "EC Staff")
                    {
                        <!-- Availability Status -->
                        <br />
                        <h4 class="d-flex justify-content-between align-items-center mb-3">Availability Status</h4>
                        <div class="col">
                            <ul class="list-group mb-3">
                                <li class="list-group-item d-flex lh-sm">
                                    <div class="label-col"><h6 class="my-0">Status</h6></div>
                                    @if (Model.profileInfo.availabilityStatus == "On Duty")
                                    {
                                        <select class="form-select short-dropdown" name="availabilityStatus" disabled>
                                            <option value="On Duty" selected>On Duty</option>
                                        </select>
                                    }
                                    else
                                    {
                                        <select class="form-select short-dropdown" name="availabilityStatus" required onchange="handleAvailabilityStatusChange(this)">
                                            <option value="" selected disabled>Select Availability Status</option>
                                            @{
                                                if (Model.profileInfo.availabilityStatus == "Available")
                                                {
                                                    <option value="Available" selected>Available</option>
                                                }
                                                else
                                                {
                                                    <option value="Available">Available</option>
                                                }
                                                if (Model.profileInfo.availabilityStatus == "On Leave")
                                                {
                                                    <option value="On Leave" selected>On Leave</option>
                                                }
                                                else
                                                {
                                                    <option value="On Leave">On Leave</option>
                                                }
                                                if (Model.profileInfo.availabilityStatus == "Inactive")
                                                {
                                                    <option value="Inactive" selected>Inactive</option>
                                                }
                                                else
                                                {
                                                    <option value="Inactive">Inactive</option>
                                                }
                                            }
                                        </select>
                                    }
                                </li>
                            </ul>
                        </div>
                    }
                    <div class="edit-controls">
                        <button type="button" class="btn btn-secondary" onclick="cancelContactInformation()">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveChangesButton">Save</button>
                    </div>
                </form>
            }

            <!-- Change Password -->
            <form id="changePasswordForm" method="POST" asp-page-handler="ChangePassword">
                @if (Model.UserType == "Admin")
                {
                    <!-- Title -->
                    <div class="col-12 d-flex align-items-center justify-content-between">
                        <h1><i class="bi bi-gear" style="padding: 0 5px 0 5px;"></i>Settings</h1>
                    </div>
                    <br />
                }

                <h4 class="d-flex justify-content-between align-items-center mb-3">Change Password</h4>
                <div class="row justify-content-center">
                    <div class="col">
                        <ul class="list-group mb-3">
                            <li class="list-group-item d-flex lh-sm">
                                <div class="label-col"><h6 class="my-0">Current Password</h6></div>
                                <div class="input-col">
                                    <input type="password" class="form-control" id="currentPasswordInput" name="currentPassword">
                                </div>
                            </li>
                            <li class="list-group-item d-flex lh-sm">
                                <div class="label-col"><h6 class="my-0">New Password</h6></div>
                                <div class="input-col">
                                    <input type="password" class="form-control" id="newPasswordInput" name="newPassword">
                                </div>
                            </li>
                            <li class="list-group-item d-flex lh-sm">
                                <div class="label-col"><h6 class="my-0">Confirm Password</h6></div>
                                <div class="input-col">
                                    <input type="password" class="form-control" id="confirmPasswordInput" name="confirmPassword">
                                    <small id="passwordMatchError" class="text-danger" style="display:none;">Passwords do not match</small>
                                </div>
                            </li>
                        </ul>
                        <div class="password-controls" id="passwordButtons" style="display: none;">
                            <button type="button" class="btn btn-secondary" onclick="cancelPassword()">Cancel</button>
                            <button type="button" class="btn btn-primary" id="saveChangesPassword">Save</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


    <script>
        // Store original values when the page loads
        var originalContactInfo = {
            emailAddress: "@Model.profileInfo.emailAddress",
            mobileNum: "@Model.profileInfo.mobileNum"
        };

        var originalAvailabilityStatus = "@Model.profileInfo.availabilityStatus";

        // Function to set the form fields to their original values
        function revertToOriginalState() {
            // Revert contact information form
            document.getElementById('contactInformationForm').querySelector('input[name="emailAddress"]').value = originalContactInfo.emailAddress;
            document.getElementById('contactInformationForm').querySelector('input[name="mobileNum"]').value = originalContactInfo.mobileNum;

            // Revert availability status dropdown
            var statusDropdown = document.getElementById('contactInformationForm').querySelector('select[name="availabilityStatus"]');
            statusDropdown.value = originalAvailabilityStatus;

            // Hide edit controls
            document.getElementById('contactInformationForm').querySelector('.edit-controls').style.display = 'none';
        }

        function editContactInformation() {
            // Display edit controls when the user clicks "Edit Contact Information"
            document.getElementById('contactInformationForm').querySelector('.edit-controls').style.display = 'flex';
        }

        function cancelContactInformation() {
            // Revert to the original state when the user clicks "Cancel"
            revertToOriginalState();
        }

        // Add event listeners to the input fields in the contact information form
        const contactFormInputs = document.getElementById('contactInformationForm').querySelectorAll('input');
        contactFormInputs.forEach(input => {
            input.addEventListener('input', handleContactFormInput);
        });

        function handleContactFormInput() {
            // Show edit controls when the user types in any input field in the contact information form
            document.getElementById('contactInformationForm').querySelector('.edit-controls').style.display = 'flex';
        }

        function cancelPassword() {
            // Hide password controls when the user clicks "Cancel" in the change password form
            document.getElementById('changePasswordForm').querySelector('.password-controls').style.display = 'none';
        }

        // Add event listeners to the input fields in the change password form
        const passwordFormInputs = document.getElementById('changePasswordForm').querySelectorAll('input');
        passwordFormInputs.forEach(input => {
            input.addEventListener('input', handlePasswordFormInput);
        });

        function handlePasswordFormInput() {
            // Show password controls when the user types in all input fields in the change password form
            const passwordInputs = document.getElementById('changePasswordForm').querySelectorAll('input[type="password"]');
            const isAllFilled = Array.from(passwordInputs).every(input => input.value.trim() !== '');
            document.getElementById('changePasswordForm').querySelector('.password-controls').style.display = isAllFilled ? 'flex' : 'none';
        }

        function handleAvailabilityStatusChange(dropdown) {
            // Show edit controls when the user changes the availability status
            document.getElementById('contactInformationForm').querySelector('.edit-controls').style.display = 'flex';

            // You can add additional logic here if needed
        }

        function clearPasswordForm() {
            // Clear input fields in the change password form
            document.getElementById('changePasswordForm').querySelector('input[id="currentPasswordInput"]').value = '';
            document.getElementById('changePasswordForm').querySelector('input[id="newPasswordInput"]').value = '';
            document.getElementById('changePasswordForm').querySelector('input[id="confirmPasswordInput"]').value = '';

            // Hide password controls
            document.getElementById('changePasswordForm').querySelector('.password-controls').style.display = 'none';
        }

        function cancelPassword() {
            // Clear password form and hide controls when the user clicks "Cancel"
            clearPasswordForm();
        }
    </script>

    <!-- Save Button for Forms -->
    <script>
        document.getElementById('saveChangesButton').addEventListener('click', function () {
            document.getElementById('contactInformationForm').submit();
        });
        document.getElementById('saveChangesPassword').addEventListener('click', function () {
            document.getElementById('changePasswordForm').submit();
        });
    </script>

    <!-- Password Match Checker -->
    <script>
        var newPasswordInput = document.getElementById('newPasswordInput');
        var confirmPasswordInput = document.getElementById('confirmPasswordInput');
        var passwordMatchError = document.getElementById('passwordMatchError');
        var passwordButtons = document.getElementById('passwordButtons');

        // Function to check if passwords match
        function checkPasswordMatch() {
            var newPassword = newPasswordInput.value;
            var confirmPassword = confirmPasswordInput.value;
            var passwordsMatch = newPassword === confirmPassword;

            // Toggle the visibility of passwordButtons based on password match status
            passwordButtons.style.display = passwordsMatch ? 'block' : 'none';
            passwordMatchError.style.display = passwordsMatch ? 'none' : 'block';
        }

        // Event listener for input event on confirmPasswordInput
        newPasswordInput.addEventListener('input', checkPasswordMatch);

        // Event listener for input event on confirmPasswordInput
        confirmPasswordInput.addEventListener('input', checkPasswordMatch);
    </script>
    
    <!-- Mobile Num and Email Address Input Checker -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const mobileInput = document.getElementById('mobileNum');
            const emailAddressInput = document.getElementById('emailAddress');
            const mobileErrorElement = document.getElementById('mobileNumError');
            const emailAddressErrorElement = document.getElementById('emailAddressError');
            const submitButton = document.getElementById('saveChangesButton');

            // Mobile Number input handling
            mobileInput.addEventListener('focus', function () {
                if (!this.value.startsWith('09')) {
                    this.value = '09';
                }
            });

            mobileInput.addEventListener('input', function () {
                let cleanedValue = this.value.replace(/[^0-9]/g, '');

                if (cleanedValue.length >= 2) {
                    cleanedValue = '09' + cleanedValue.slice(2);
                }

                this.value = cleanedValue.slice(0, 11);

                // Check if the input meets the minlength and maxlength requirements
                const isValidMobileLength = this.value.length === 11;

                if (isValidMobileLength) {
                    mobileErrorElement.style.display = 'none';
                } else {
                    mobileErrorElement.style.display = 'block';
                }

                checkFormValidity();
            });

            // Email Address input handling
            emailAddressInput.addEventListener('input', function () {
                const isValidEmail = emailAddressInput.checkValidity();

                if (isValidEmail) {
                    emailAddressErrorElement.style.display = 'none';
                } else {
                    emailAddressErrorElement.style.display = 'block';
                }

                checkFormValidity();
            });

            // Enable/disable "Submit" button
            function checkFormValidity() {
                const isValidMobile = mobileInput.checkValidity();
                const isValidEmail = emailAddressInput.checkValidity();

                submitButton.disabled = !(isValidMobile && isValidEmail);
            }
        });
    </script>
