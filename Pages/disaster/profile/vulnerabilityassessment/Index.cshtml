@page
@model AgapayAidSystem.Pages.disaster.profile.vulnerabilityassessment.IndexModel
@{
	ViewData["Title"] = "Vulnerability Assessment";
}

<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<div class="container-fluid">
	<input type="hidden" name="centerLogID" value="@Model.logInfo.centerLogID" />
    <div class="row">
        <!-- Sidebar (desktop) -->
        <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block d-none sidebar">
            <div class="position-sticky">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link active" href="/disaster/profile/informationboard/index?centerLogID=@Model.logInfo.centerLogID">Information Board</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/entrylog/index?centerLogID=@Model.logInfo.centerLogID">Entry Log</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/staffassignment/index?centerLogID=@Model.logInfo.centerLogID">Staff Assignment</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/inventory/index?centerLogID=@Model.logInfo.centerLogID">Inventory</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/reliefgoodspack/index?centerLogID=@Model.logInfo.centerLogID">Relief Goods Pack</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/vulnerabilityassessment/index?centerLogID=@Model.logInfo.centerLogID">Vulnerability Assessment</a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Sidebar (mobile) -->
        <div id="sidebarMobile" class="col-md-3 col-lg-2 d-md-none bg-light p-2">
            <select class="form-select" id="pageSelect">
                <option value="/disaster/profile/informationboard/index?centerLogID=@Model.logInfo.centerLogID">Information Board</option>
                <option value="/disaster/profile/entrylog/index?centerLogID=@Model.logInfo.centerLogID">Entry Log</option>
                <option value="/disaster/profile/staffassignment/index?centerLogID=@Model.logInfo.centerLogID">Staff Assignment</option>
                <option value="/disaster/profile/inventory/index?centerLogID=@Model.logInfo.centerLogID">Inventory</option>
                <option value="/disaster/profile/reliefgoodspack/index?centerLogID=@Model.logInfo.centerLogID">Relief Goods Pack</option>
                <option value="/disaster/profile/vulnerabilityassessment/index?centerLogID=@Model.logInfo.centerLogID">Vulnerability Assessment</option>
            </select>
        </div>

        <style>
            .ec-info td {
                width: 50%; /* Each column takes 50% width to make them equal */
            }
        </style>

        <!-- Page Content -->
        <div class="col-md-9 ms-sm-auto col-lg-10 px-md-4 pb-3 pt-3">
            <div class="container">
                <!-- Breadcrumb -->
                <div class="row pb-2" aria-label="breadcrumb">
                    <nav style="--bs-breadcrumb-divider: '/';" aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a href="/index"><i class="bi bi-house-door-fill" style="padding: 5px;"></i>Home</a></li>
                            <li class="breadcrumb-item"><a href="/disaster/index">Disaster</a></li>
                            <li class="breadcrumb-item"><a href="/disaster/profile/index?disasterID=@Model.logInfo.disasterID">@Model.logInfo.disasterName</a></li>
                            <li class="breadcrumb-item active"><a><strong>@Model.logInfo.centerName</strong></a></li>
                        </ol>
                    </nav>
                </div>

				<div class="row pb-2">
					<!-- Title and Add Button -->
					<div class="col-12 d-flex justify-content-between align-items-center" style="gap: 30px">
						<div class="d-flex align-items-center">
							<h1>Vulnerability Assessment</h1>
						</div>

						<div class="d-flex justify-content-between align-items-center">
							<a id="checkInButton" class="btn btn-primary mb-2" href="/disaster/profile/vulnerabilityassessment/add?centerLogID=@Model.logInfo.centerLogID">
								<i class="bi bi-plus-circle pt" style="padding: 5px;"></i> Add Assessment
							</a>
							<button style="display: none;" type="button" class="btn btn-danger mb-2" name="saveSelection" data-bs-toggle="modal" data-bs-target="#confirmSaveModal" disabled>
								<i class="bi bi-x-circle pt" style="padding: 5px;"></i> Check-out Evacuee
							</button>
						</div>
					</div>

					<!-- Table -->
					<div class="col-lg-12">
						<table id="assess-table" class="table display compact order-column table-hover" cellspacing="0" width="100%">
							<thead>
								<tr>
									<th>#</th>
									<th>Family Serial No.</th>
									<th>Family Head Name</th>
									<th>Score</th>
									<th>Vulnerability Level</th>
									<th></th>
								</tr>
							</thead>
							<tbody>
								@{ var counter = 1; }
								@foreach (var item in Model.listAssessment)
								{

									<tr style="text-align:center;">
										<td width="5%">@counter</td>
										<td width="25%">@item.serialNum</td>
										<td width="25%">@item.familyHead</td>
										<td width="15%">@item.totalScore</td>
										<td width="25%">@item.vulnerabilityLevel</td>
										<td width="5%">
											<div class="d-inline position-relative">
												<a href="#" role="button" id="recordOptions" data-bs-toggle="dropdown" aria-expanded="false">
													<i class="bi bi-three-dots-vertical"></i>
												</a>
												<ul class="dropdown-menu" aria-labelledby="recordOptions">
													<li>
														<a class="dropdown-item" href="/disaster/profile/vulnerabilityassessment/view?assessmentID=@item.assessmentID">
															View
														</a>
													</li>
													<li>
														<a href="#" class="dropdown-item text-danger" onclick="prepareDelete('@item.assessmentID')"
														   data-deleteid="@item.assessmentID" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal">
															Delete
														</a>
													</li>
												</ul>
											</div>
										</td>
									</tr>
									counter++;
								}
							</tbody>
						</table>
					</div>
				</div>
            </div>
        </div>
    </div>
</div>

<!-- Modal: Confirm Delete -->
<div class="modal" id="deleteConfirmationModal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				Are you sure you want to delete this vulnerability assessment?
				<p><strong class="text-danger">This cannot be undone.</strong></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
			</div>
		</div>
	</div>
</div>

<!-- Confirm Delete -->
<script>
	const deleteButtons = document.querySelectorAll('.edit-button');
	let assessmentIdToDelete = null;
	let centerLogID = null;

	deleteButtons.forEach(function (button) {
		button.addEventListener('click', function () {
			assessmentIdToDelete = this.getAttribute('data-deleteid');
		});
	});

	// Function to prepare for delete action
	function prepareDelete(assessmentID) {
		if (assessmentID === null || assessmentID === undefined) {
			// Retrieve assessmentID from the button's data-deleteid attribute
			assessmentIdToDelete = event.currentTarget.getAttribute('data-deleteid');
		} else {
			assessmentIdToDelete = assessmentID;
		}

		// Retrieve centerLogID from the query string
		const urlParams = new URLSearchParams(window.location.search);
		centerLogID = urlParams.get("centerLogID");
	}

	const confirmDeleteButton = document.getElementById('confirmDeleteButton');

	confirmDeleteButton.addEventListener('click', function () {
		if (assessmentIdToDelete !== null) {
			window.location.href = "/disaster/profile/vulnerabilityassessment/delete?assessmentID=" + assessmentIdToDelete + "&centerLogID=" + centerLogID;
		}
	});
</script>

<!-- Making the table responsive -->
<script>
	$(document).ready(function () {
		var table = $('#assess-table').DataTable({
			responsive: true,
			columnDefs: [
				{ "orderable": true, "targets": [0, 1, 2, 3] }, // Sortable columns
				{ "orderable": false, "targets": [4, 5] } // Non-sortable columns
			]
		});

		// Adding filters to specific columns
		table.columns([4]).every(function () {
			var column = this;
			var select = $('<select><option value=""></option></select>')
				.appendTo($(column.header()))
				.on('change', function () {
					var val = $.fn.dataTable.util.escapeRegex(
						$(this).val()
					);

					column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
				});

			column.data().unique().sort().each(function (d, j) {
				select.append('<option value="' + d + '">' + d + '</option>');
			});
		});
	});
</script>