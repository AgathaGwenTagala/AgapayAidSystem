using AgapayAidSystem.Pages.Disaster.Profile;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using MySql.Data.MySqlClient;

namespace AgapayAidSystem.Pages.disaster.profile.vulnerabilityassessment
{
    public class IndexModel : PageModel
    {
		private readonly IConfiguration _configuration;
		public IndexModel(IConfiguration configuration) => _configuration = configuration;
		public EvacuationCenterLogInfo logInfo { get; set; } = new EvacuationCenterLogInfo();
		public List<AssessmentInfo> listAssessment { get; set; } = new List<AssessmentInfo>();
		public string errorMessage = "";
		public string successMessage = "";

		public void OnGet()
        {
			string centerLogID = Request.Query["centerLogID"];
			try
			{
				string connectionString = _configuration.GetConnectionString("DefaultConnection");
				using (MySqlConnection connection = new MySqlConnection(connectionString))
				{
					connection.Open();

					// Fetch info of selected center log from the database
					string logSql = "SELECT log.centerLogID, d.disasterID, d.disasterName, ec.centerName " +
									"FROM evacuation_center_log AS log " +
									"INNER JOIN evacuation_center AS ec ON log.centerID = ec.centerID " +
									"INNER JOIN disaster AS d ON log.disasterID = d.disasterID " +
									"WHERE log.centerLogID = @centerLogID";
					using (MySqlCommand logCommand = new MySqlCommand(logSql, connection))
					{
						logCommand.Parameters.AddWithValue("@centerLogID", centerLogID);
						using (MySqlDataReader logReader = logCommand.ExecuteReader())
						{
							if (logReader.Read())
							{
								logInfo.centerLogID = logReader.GetString(0);
								logInfo.disasterID = logReader.GetString(1);
								logInfo.disasterName = logReader.GetString(2);
								logInfo.centerName = logReader.GetString(3);
							}
						}
					}

					// Fetch vulnerability assessment data related to the selected center log
					string assessSql = "SELECT * FROM vul_assessment_view " +
									   "WHERE centerLogID = @centerLogID;";
					using (MySqlCommand assessCommand = new MySqlCommand(assessSql, connection))
					{
						assessCommand.Parameters.AddWithValue("@centerLogID", centerLogID);
						using (MySqlDataReader assessReader = assessCommand.ExecuteReader())
						{
							while (assessReader.Read())
							{
								AssessmentInfo assessInfo = new AssessmentInfo();
								assessInfo.assessmentID = assessReader.GetString(0);
								assessInfo.centerLogID = assessReader.GetString(1);
								assessInfo.familyID = assessReader.GetString(2);
								assessInfo.totalScore = assessReader.GetInt32(3).ToString();
								assessInfo.vulnerabilityLevel = assessReader.GetString(4);
								assessInfo.createdAt = assessReader.GetDateTime(5).ToString("yyyy-MM-dd hh:mm tt").ToUpper();
								assessInfo.serialNum = assessReader.GetString(6);
								assessInfo.familyHead = assessReader.GetString(7);
								listAssessment.Add(assessInfo);
							}
						}
					}
				}
			}

			catch (Exception ex)
			{
				errorMessage = ex.Message;
			}
		}
    }

	public class AssessmentInfo
	{
		public string assessmentID { get; set; }
		public string centerLogID { get; set; }
		public string familyID { get; set; }
		public string totalScore { get; set; }
		public string vulnerabilityLevel { get; set; }
		public string createdAt { get; set; }
		public string serialNum { get; set; }
		public string familyHead { get; set; }
	}
}
