@page
@model AgapayAidSystem.Pages.ECStaff.IndexModel
@{
	ViewData["Title"] = "EC Staff";
}

@if (Model.UserType == "Admin")
{
	Layout = "_Layout";
}
else if (Model.UserType == "LGU Staff")
{
	Layout = "_Layout - LGU";
}
else if (Model.UserType == "EC Staff")
{
	Layout = "_Layout - EC Staff";
}
else
{
	Layout = "_Login";
}

<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<style>
	/* Adjust the size of the DataTable search input */
	div.dataTables_wrapper div.dataTables_filter input {
		width: 150px;
		margin-right: 10px;
	}
</style>

<!-- Breadcrumb -->
<div class="row" aria-label="breadcrumb">
	<nav style="--bs-breadcrumb-divider: '/';" aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item"><a href="/index"><i class="bi bi-house-door-fill" style="padding: 5px;"></i>Home</a></li>
			<li class="breadcrumb-item active"><a><strong>Evacuation Center Staff</strong></a></li>
		</ol>
	</nav>
</div>

<!-- Title and Add Button-->
<div class="row mb-2">
	<div class="col-12 d-flex align-items-center justify-content-between">
		<h1><i class="bi bi-person-standing" style="padding: 0 5px 0 5px;"></i>Evacuation Center Staff</h1>
	</div>
</div>

<!-- Table -->
<div class="row">
	<table id="staff-table" class="table display compact order-column table-hover" cellspacing="0" width="100%">
		<thead>
			<tr style="vertical-align: top;">
				<th>#</th>
				<th>Name</th>
				<th>Sex</th>
				<th>Age</th>
				<th>Birthdate</th>
				<th>Mobile Number</th>
				<th>Email Address</th>
				<th>Status</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@{
				var counter = 1;
			}
			@foreach (var item in Model.listECStaff)
			{
				<tr>
					<td width="5%">@counter</td>
					<td width="20%" style="text-align: left;">@item.fullName</td>
					<td width="13%">@item.sex</td>
					<td width="5%">@item.age</td>
					<td width="10%">@item.birthdate</td>
					<td width="12%">@item.mobileNum</td>
					<td width="10%" style="text-align: left;">@item.emailAddress</td>
					<td width="15%">
						@if (@item.availabilityStatus == "Available")
						{
							<span class="badge rounded-pill bg-success">@item.availabilityStatus</span>
						}
						else if (@item.availabilityStatus == "On Duty")
						{
							<span class="badge rounded-pill bg-danger">@item.availabilityStatus</span>
						}
						else if (@item.availabilityStatus == "Inactive" || @item.availabilityStatus == "On Leave")
						{
							<span class="badge rounded-pill bg-light">@item.availabilityStatus</span>
						}
					</td>
					<td width="5%">
						<div class="d-inline position-relative">
							<a href="#" role="button" id="recordOptions" data-bs-toggle="dropdown" aria-expanded="false">
								<i class="bi bi-three-dots-vertical"></i>
							</a>
							<ul class="dropdown-menu" aria-labelledby="recordOptions">
								<li>
									<a class="dropdown-item" href="/ecstaff/assignmenthistory?ecStaffID=@item.ecStaffID">
										View Assignment History
									</a>
								</li>
							</ul>
						</div>
					</td>
				</tr>
				counter++;
			}
		</tbody>
	</table>
</div>

<!-- Making the table responsive -->
<script>
	$(document).ready(function () {
		var table = $('#staff-table').DataTable({
			responsive: true,
			pageLength: 25,
			columnDefs: [
				{ "orderable": true, "targets": [0, 1, 3, 4] }, // Sortable columns
				{ "orderable": false, "targets": [2, 5, 6, 7, 8] }, // Non-sortable columns
				{ "responsivePriority": -1, "targets": [0, 1, 7] } // Disable responsive for specific columns
			]
		});

		table.columns([2, 7]).every(function () {
			var column = this;
			var filterContainer = $('<div class="dropdown align-items-center d-inline-flex ps-2"></div>').appendTo($(column.header()));
			var btn = $('<button class="btn btn-sm btn-secondary" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="bi bi-funnel"></i></button>').appendTo(filterContainer);
			var menu = $('<div class="dropdown-menu p-3"></div>').appendTo(filterContainer);

			function updateFilterButton() {
				var hasActiveFilter = column.search() !== '';
				btn.toggleClass('btn-warning', hasActiveFilter);
			}

			column.data().unique().sort().each(function (d, j) {
				// Only add the options "Available" and "On Duty" for the "Status" column
				if (column.index() === 7) {
					// Set specific filter options only if they haven't been added
					if (menu.find("input[value='Available']").length === 0) {
						menu.append('<div class="form-check"><input class="form-check-input" type="checkbox" value="Available">' +
							'<label class="form-check-label ps-1">Available</label></div>');
					}
					if (menu.find("input[value='On Duty']").length === 0) {
						menu.append('<div class="form-check"><input class="form-check-input" type="checkbox" value="On Duty">' +
							'<label class="form-check-label ps-1">On Duty</label></div>');
					}
					if (menu.find("input[value='On Leave']").length === 0) {
						menu.append('<div class="form-check"><input class="form-check-input" type="checkbox" value="On Leave">' +
							'<label class="form-check-label ps-1">On Leave</label></div>');
					}
					if (menu.find("input[value='Inactive']").length === 0) {
						menu.append('<div class="form-check"><input class="form-check-input" type="checkbox" value="Inactive">' +
							'<label class="form-check-label ps-1">Inactive</label></div>');
					}
				}
				// For other columns, show all unique values as filter options
				else {
					menu.append('<div class="form-check"><input class="form-check-input" type="checkbox" value="' + d + '">' +
						'<label class="form-check-label ps-1">' + d + '</label></div>');
				}
			});
			menu.prepend('<div class="form-check"><input class="form-check-input select-all" type="checkbox" value="select-all">' +
				'<label class="form-check-label ps-1">Select All</label></div>');

			menu.append('<hr class="dropdown-divider"><div class="p-1"><button type="button" class="btn btn-sm btn-light clear-filter"><i class="bi bi-eraser pe-1"></i>Clear Filter</button></div>');

			menu.find('.form-check-input, .clear-filter').on('click', function () {
				var checked = $(this).prop('checked');

				if ($(this).hasClass('form-check-input')) {
					if ($(this).val() === 'select-all') {
						menu.find('.form-check-input').prop('checked', checked);
					} else if (!checked) {
						menu.find('.form-check-input[value="select-all"]').prop('checked', false);
					}
				} else {
					menu.find('.form-check-input').prop('checked', false);
					menu.find('.form-check-input[value="select-all"]').prop('checked', false);
				}

				var selectedValues = menu.find('.form-check-input:checked').map(function () {
					return $(this).val();
				}).get();

				column.search(selectedValues.length > 0 ? '^(' + selectedValues.join('|') + ')$' : '', true, false).draw();
				updateFilterButton();
			});
			updateFilterButton();
		});
	});
</script>

