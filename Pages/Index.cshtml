@page
@model IndexModel
@{
    ViewData["Title"] = "Agapay Aid";
}

<style>
    .slider::-webkit-scrollbar {
        display: none;
    }
    
    .container-slide {
        padding: 1rem;
    }

    .slider-wrapper {
        position: relative;
        max-width: 100rem;
        margin: 0 auto;
    }

    .slider {
        display: flex;
        aspect-ratio: 21.00/ 9;
        overflow-x: auto;
        scroll-snap-type: x mandatory;
        scroll-behavior: smooth;
        /*box-shadow: 0 2.9rem 3rem -0.75rem hsla(0, 0%, 0%, 0.25);*/
        border-radius: 0.5rem;
    }

    .slider img {
        flex: 1 0 100%;
        scroll-snap-align: start;
        object-fit: cover;
    }

    .slider img:nth-child(3) {
    object-position: top;
    }

    .slider-nav {
        display: flex;
        column-gap: 1rem;
        position: absolute;
        bottom: 1.25rem;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1;
    }

    .slider-nav a {
        width: 0.75rem;
        height: 0.75rem;
        border-radius: 50%;
        background-color: #fff;
        opacity: 0.75;
        transition: opacity ease 250ms;
    }

    .slider-nav a:hover {
        opacity: 1;
        background-color: #6db5b1;
    }

    body {
        /*background-image: url('./images/bgimg.jpg');*/
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed; /* This ensures the background image stays fixed when scrolling */
    }
</style>



<!--LINKS-->
<link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>

<!--MAIN-->
@section Dashboard {
    <section class="container-slide pt-5">
        <div class="slider-wrapper">
            <div class="slider" id="imageSlider">
                <img id="slide-1" src="/images/ec1img.jpg" alt="EC 1 Image">
                <img id="slide-2" src="/images/ec2img.jpg" alt="EC 2 Image">
                <img id="slide-3" src="/images/ec3img.jpg" alt="EC 3 Image">
            </div>
            <div class="slider-nav">
                <a href="#slide-1"></a>
                <a href="#slide-2"></a>
                <a href="#slide-3"></a>
            </div>
        </div>
    </section>
}

<div class="container form-container1">
    <div class="container form-container-content1">
        <div class="row">
            <div class="col d-flex align-items-center pb-2">
                <h1>@Model.disasterInfo.disasterName</h1>
            </div>

            <div class="col-auto button-spacer">
                <!-- Button with text and icon (visible on larger screens) -->
                <button id="toggleButton" class="btn d-none d-md-inline-block"
                        onclick="showInfo('@Model.disasterInfo.disasterType', '@Model.disasterInfo.description', '@Model.disasterInfo.dateOccured')"
                        data-bs-toggle="modal" data-bs-target="#infoModal"
                        style="background-color: var(--bs-primary-color);color:white">
                    <i class="bi bi-info-circle-fill"></i> Info
                </button>

                <!-- Button with icon only (visible on smaller screens) -->
                <button id="toggleButtonMobile" class="btn d-inline-block d-md-none"
                        onclick="showInfo('@Model.disasterInfo.disasterType', '@Model.disasterInfo.description', '@Model.disasterInfo.dateOccured')"
                        data-bs-toggle="modal" data-bs-target="#infoModal"
                        style="background-color: var(--bs-primary-color);color:white">
                    <i class="bi bi-info-circle-fill"></i>
                </button>

                <!-- Button with text and icon (visible on larger screens) -->
                <a id="toggleButton" href="/disaster/profile/index?disasterID=@Model.disasterInfo.disasterID" class="btn d-none d-md-inline-block position-relative" role="button" style="background-color: var(--bs-primary-color);color:white">
                    View More <i class="bi bi-arrow-right-circle"></i>
                </a>

                <!-- Button with text and icon (visible on smaller screens) -->
                <a id="toggleButtonMobile" href="/disaster/profile/index?disasterID=@Model.disasterInfo.disasterID" class="btn d-inline-block d-md-none" role="button" style="background-color: var(--bs-primary-color);color:white">
                    <i class="bi bi-arrow-right-circle"></i>
                </a>
            </div>
        </div>
    </div>

    <div class="dashcontent">
        <div class="boxinfo">
            <div class="infoitem">
                <i class="bi bi-people"></i>
                <div class="text">
                    <h3 class="dashtitle">@Model.GetTotalDistinctEvacueesCount(Model.disasterInfo.disasterID)</h3>
                    <p><b>Total Evacuees</b></p>
                    <div class="box-stat">
                        <small>Check-in: <span>@Model.GetTotalCheckInCount(Model.disasterInfo.disasterID)</span></small>
                        <small>Check-out: <span>@Model.GetTotalCheckOutCount(Model.disasterInfo.disasterID)</span></small>
                    </div>
                </div>
            </div>

            <div class="infoitem">
                <i class="bi bi-buildings-fill"></i>
                <div class="text">
                    <h3 class="dashtitle">@Model.GetTotalDistinctBarangaysCount(Model.disasterInfo.disasterID)</h3>
                    <p><b>Total Affected Brgys</b></p>
                    <div class="box-stat">
                        <small>Families: <span>@Model.GetTotalDistinctFamiliesCount(Model.disasterInfo.disasterID)</span></small>
                        <small>Male: <span>@Model.GetTotalDistinctFemaleCount(Model.disasterInfo.disasterID)</span></small>
                        <small>Female: <span>@Model.GetTotalDistinctMaleCount(Model.disasterInfo.disasterID)</span></small>
                    </div>
                </div>
            </div>

            <div class="infoitem">
                <i class="bi bi-building-fill"></i>
                <div class="text">
                    <h3 class="dashtitle">@Model.GetTotalCenterCount(Model.disasterInfo.disasterID)</h3>
                    <p><b>Total Evacuation Centers</b></p>
                    <div class="box-stat">
                        <small>Open: <span>@Model.GetTotalOpenCenterCount(Model.disasterInfo.disasterID)</span></small>
                        <small>Closed: <span>@Model.GetTotalClosedCenterCount(Model.disasterInfo.disasterID)</span></small>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div class="container form-container1">
    <div class="container form-container-content1">
        <div>
            <h2>Evacuation Center</h2>
        </div>
    </div>

    <!-- Table -->
    <div class="row p-2">
        <div class="col-lg-12">
            <div class="container table-container">
                <table id="ec" class="table display compact order-column table-hover" cellspacing="0" width="100%">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Barangay</th>
                            <th>Occupancy</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var counter = 1;
                        }
                        @foreach (var item in Model.listCenterLog)
                        {
                            <tr>
                                <td width="5%">@counter</td>
                                <td width="25%">@item.centerName</td>
                                <td width="25%" style="text-align: center;">@item.barangayName</td>
                                <td width="30%" style="text-align: center;">
                                    <div class="progress-container">
                                        <!-- Progress bar will be added dynamically here -->
                                    </div>
                                    <span class="occupancy-text">@item.occupancy/@item.maxCapacity</span>
                                </td>
                                <td width="15%" style="text-align: center;">
                                    @if (@item.status == "Open")
                                    {
                                        <span class="badge bg-success">@item.status</span>
                                    }
                                    else if (@item.status == "Closed")
                                    {
                                        <span class="badge rounded-pill bg-light">@item.status</span>
                                    }
                                </td>
                            </tr>
                            counter++;
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div class="p-4 p-md-5 mb-4 text-white rounded bg-primary text-center">
        <div class="col-md-6 mx-auto">
            <h1><img src="/white-logo-horizontal.png" alt="" id="logo"></h1>
            <p class="lead my-3">Together, we stand stronger in the face of adversity.</p>
            <a class="btn btn-outline-secondary text-white" href="/about">Learn More</a>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        var table = $('#ec').DataTable({
            responsive: true,
            pageLength: 25,
            columnDefs: [
                { "orderable": true, "targets": [0, 1] }, //Sortable columns
                { "orderable": false, "targets": [2, 3, 4] } // Non-sortable columns
            ],
            initComplete: function () {
                var rows = this.api().rows({ page: 'current' }).nodes();

                for (var i = 0; i < rows.length; i++) {
                    updateOccupancyBar(rows[i]);
                }
            }
        });

        function updateOccupancyBar(row) {
            var occupancyCell = row.cells[3];
            var occupancyText = occupancyCell.textContent.trim();
            var occupancyValues = occupancyText.split('/');
            var occupancy = parseInt(occupancyValues[0]);
            var totalCapacity = parseInt(occupancyValues[1]);
            var percentage = (occupancy / totalCapacity) * 100;

            var progressBar = document.createElement('div');
            progressBar.className = 'progress-bar';

            if (percentage > 100) {
                progressBar.style.backgroundColor = '#FF5A57';
            }

            progressBar.style.width = percentage + '%';

            var progressContainer = document.createElement('div');
            progressContainer.className = 'progress';
            progressContainer.appendChild(progressBar);

            occupancyCell.innerHTML = ''; // Clear existing content
            occupancyCell.appendChild(progressContainer);
            occupancyCell.insertAdjacentHTML('beforeend', occupancyText);
        }
    });
</script>

<!-- Modal: Disaster Information -->
<div class="modal fade" id="infoModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Disaster Information</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table>
                    <tr>
                        <th class="text-start pe-4">Type</th>
                        <td id="disasterType" class="text-start"></td>
                    </tr>
                    <tr>
                        <th class="text-start pe-4">Description</th>
                        <td id="description" class="text-start"></td>
                    </tr>
                    <tr>
                        <th class="text-start pe-4">Date Occurred</th>
                        <td id="dateOccured" class="text-start"></td>
                    </tr>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Disaster Information Modal -->
<script>
    function showInfo(disasterType, description, dateOccured) {
        // Set the content of the modal with the provided info
        document.getElementById('disasterType').innerText = disasterType;
        document.getElementById('description').innerText = description;
        document.getElementById('dateOccured').innerText = dateOccured;
    }
</script>

<!-- SLIDER -->
<script>
    var imageSlider = document.getElementById('imageSlider');
    var autoPlayInterval;
    var currentSlide = 0;
    var isDragging = false;
    var startX;
    var scrollLeftAtStart;

    // Function to start auto-play
    function startAutoPlay() {
        autoPlayInterval = setInterval(function () {
            // Increment the current slide index
            currentSlide++;

            // Reset to the first slide if reached the end
            if (currentSlide >= imageSlider.children.length) {
                currentSlide = 0;
            }

            // Scroll to the next image
            imageSlider.scrollLeft = currentSlide * imageSlider.offsetWidth;
        }, 3500); // Adjust the interval (in milliseconds) for the auto-play speed
    }

    // Start auto-play when the page loads
    startAutoPlay();

    // Pause auto-play when the user interacts with the slider
    imageSlider.addEventListener('mousedown', function (e) {
        isDragging = true;
        startX = e.pageX - imageSlider.offsetLeft;
        scrollLeftAtStart = imageSlider.scrollLeft;
        clearInterval(autoPlayInterval);
    });

    // Resume auto-play after the user releases the slider
    imageSlider.addEventListener('mouseup', function () {
        isDragging = false;
        startAutoPlay();
    });

    // Handle drag movement
    imageSlider.addEventListener('mousemove', function (e) {
        if (!isDragging) return;

        e.preventDefault();

        var x = e.pageX - imageSlider.offsetLeft;
        var walk = (x - startX) * 3;
        imageSlider.scrollLeft = scrollLeftAtStart - walk;
    });

    // Disable the browser's drag-and-drop behavior on the images
    imageSlider.addEventListener('dragstart', function (e) {
        e.preventDefault();
    });

    // Handle click on slider-nav links
    var sliderNav = document.querySelector('.slider-nav');
    sliderNav.addEventListener('click', function (e) {
        if (e.target.tagName === 'A') {
            e.preventDefault();

            // Find the index of the clicked slide
            var index = Array.from(sliderNav.children).indexOf(e.target);

            // Scroll to the corresponding image with a smooth transition
            imageSlider.scrollLeft = index * imageSlider.offsetWidth;
        }
    });
</script>

