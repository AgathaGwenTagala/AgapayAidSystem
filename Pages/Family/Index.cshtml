@page
@model AgapayAidSystem.Pages.Family.IndexModel
@{

	ViewData["Title"] = "Family";
}

<style>
	/* Remove underline */
	a {
		text-decoration: none;
		color: inherit;
	}

	.filter-box {
		position: absolute;
		background-color: white;
		border: 1px solid #ccc;
		padding: 10px;
		box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
		border-radius: 5px;
	}

	.rounded-button {
		border: none;
		background-color: #408c8c; /* Example button background color */
		color: #fff; /* Example button text color */
		padding: 5px 10px;
		border-radius: 5px; /* Rounded corners for the button */
		cursor: pointer;
		transition: background-color 0.3s;
	}

	.rounded-button:hover {
		background-color: #d0e8de; /* Example button background color on hover */
		color: #3f8f8b;
		border: 1px solid #3f8f8b;
	}
</style>


<div class="container p-2">
	<div class="row pt-3">
		<div class="col">
			<div class="input-group">
				<input type="search" class="form-control ds-input" id="search-bar" placeholder="Search here..." aria-label="Search..." autocomplete="off" role="combobox" aria-autocomplete="list" aria-expanded="false" aria-owns="algolia-autocomplete-listbox-0" dir="auto" style="position: relative; vertical-align: top;">
				<button type="submit" class="btn btn-primary"><i class="bi bi-search"></i></button>
			</div>
		</div>
	</div>


	<div class="row pt-4">
		<div class="col">
			<h1>Family Database</h1>
		</div>
	</div>

	<div class="table-responsive">
		<table class="table align-middle table-hover " style="width:100%">
			<thead>
				<tr>
					<th>
						<a asp-page="./Index" asp-route-sortBy="familyID" asp-route-sortOrder="@(Model.SortBy == "familyID" && Model.SortOrder == "asc" ? "desc" : "asc")" onclick="toggleArrowIcons('familyID')">
							ID
							<ion-icon id="familyIDArrow" name="@(Model.SortBy == "familyID" && Model.SortOrder == "asc" ? "arrow-up-outline" : "arrow-down-outline")"></ion-icon>
						</a>
					</th>
					<th>
						Street Address
					</th>
					<th>
						<a href="#" id="barangayFilterLink" onclick="toggleFilterChecklist('barangayFilter')">
							Barangay
							<ion-icon id="barangayFilterArrow" name="filter"></ion-icon>
						</a>
					</th>
					<th>
						<a href="#" onclick="toggleFilter('livingInGidaFilter')">
							Living in GIDA
							<ion-icon name="filter"></ion-icon>
						</a>
						<div id="livingInGidaFilter" class="filter-box" style="display: none;">
							<label>
								<input type="checkbox" name="livingInGidaFilterValue" value="Yes"> Yes
							</label>
							<br />
							<label>
								<input type="checkbox" name="livingInGidaFilterValue" value="No"> No
							</label>
							<br />
							<button class="rounded-button" onclick="applyFilter('livingInGidaFilter')">Apply</button>
						</div>
					</th>
					<th>
						<a asp-page="./Index" asp-route-sortBy="serialNum" asp-route-sortOrder="@(Model.SortBy == "serialNum" && Model.SortOrder == "asc" ? "desc" : "asc")" onclick="toggleArrowIcons('serialNum')">
							Serial Number
							<ion-icon id="serialNumArrow" name="@(Model.SortBy == "serialNum" && Model.SortOrder == "asc" ? "arrow-up-outline" : "arrow-down-outline")"></ion-icon>
						</a>
					</th>
					<th>

					</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.listFamily)
				{
					<tr>
						<td width="10%">@item.familyID</td>
						<td width="25%">@item.streetAddress</td>
						<td width="8%">@item.barangayID</td>
						<td width="12%">@item.livingInGida</td>
						<td width="15%">@item.serialNum</td>
						<td width=20%>
							<!-- Edit button -->
							<a class="btn btn-success edit-button" href="/EvacuationCenter/EditEvacuationCenter?centerID=@item.familyID">
								<i class="bi bi-pencil-fill"></i>

								<!-- Delete button -->
								<a class="btn btn-danger edit-button" href="#" onclick="confirmDelete('@item.familyID')">
									<i class="bi bi-trash-fill"></i>


						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<script>
	function confirmDelete(familyID) {
		if (confirm("Are you sure you want to delete this family?")) {
			window.location.href = "/Family/DeleteFamily?familyID=" + familyID;
		}
	}
</script>

<script type="module" src = "https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js" ></script>
<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

<script>
	let lastClickedHeader = null;

	function toggleArrowIcons(header) {
		// Get the arrow icons for all headers
		const familyIDArrow = document.getElementById('familyIDArrow');
		const serialNumArrow = document.getElementById('serialNumArrow');

		// Determine which header was clicked and toggle the arrow icons accordingly
		if (header === 'familyID') {
			familyIDArrow.style.display = familyIDArrow.style.display === 'none' ? 'block' : 'none';
			serialNumArrow.style.display = 'none';
		}  else if (header === 'serialNum') {
			familyIDArrow.style.display = 'none';
			serialNumArrow.style.display = serialNumArrow.style.display === 'none' ? 'block' : 'none';
			} 
		// Update the last clicked header
		lastClickedHeader = header;
	}
</script>

<script>
	// Function to toggle the display of the filter checklist
	function toggleFilter(filterId) {
		const filterBox = document.getElementById(filterId);
		filterBox.style.display = filterBox.style.display === 'none' ? 'block' : 'none';
	}

	// Function to apply the filter
	function applyFilter(filterId) {
		const filterBox = document.getElementById(filterId);
		const selectedValues = Array.from(filterBox.querySelectorAll('input:checked')).map(input => input.value);

		// You can use the selectedValues array to filter the data in your table
		// For example, you can hide rows that don't match the selected filter values
		const tableRows = document.querySelectorAll('tbody tr');
		tableRows.forEach(row => {
			const livingInGidaValue = row.querySelector('td:nth-child(4)').textContent.trim(); // Assuming "Living in GIDA" is the 4th column
			if (selectedValues.length === 0 || selectedValues.includes(livingInGidaValue)) {
				row.style.display = 'table-row';
			} else {
				row.style.display = 'none';
			}
		});

		// Close the filter checklist
		filterBox.style.display = 'none';
	}
</script>