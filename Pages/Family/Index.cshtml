@page
@model AgapayAidSystem.Pages.Family.IndexModel
@{

	ViewData["Title"] = "Family";
}
<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}


<style>
	a {
		text-decoration: none;
		color: inherit;
	}

	.button-spacing {
		margin-right: 10px; /* Adjust the margin value as needed */
	}
</style>


<div class="content">
	<!-- Breadcrumb -->
	<div class="row pb-2" aria-label="breadcrumb">
		<nav style="--bs-breadcrumb-divider: '/';" aria-label="breadcrumb">
			<ol class="breadcrumb">
				<li class="breadcrumb-item"><a href="/index"><i class="bi bi-house-door-fill" style="padding: 5px;"></i>Home</a></li>
				<li class="breadcrumb-item active"><a><strong>Family</strong></a></li>
			</ol>
		</nav>
	</div>

	<!-- Title and Add Button -->
	<div class="row p-2">
		<div class="col d-flex align-items-center">
			<h1><i class="bi bi-people-fill"></i>Family</h1>
		</div>

		<div class="col-auto d-flex justify-content-between align-items-center">
			<div class="d-flex justify-content-end align-items-center">
				<a class="btn btn-primary mb-2 button-spacing" href="/family">
					<ion-icon name="download-outline"></ion-icon> Import .CSV File
				</a>
				<a class="btn btn-primary mb-2" href="/family/profile/add/index">
					<i class="bi bi-plus-circle pt" style="padding: 5px;"></i> Add Family
				</a>
			</div>
		</div>
	</div>

	<!-- Table -->
	<div class="row p-2">
		<div class="col-lg-12">
			<table id="family-table" class="table display compact order-column table-hover" cellspacing="0" width="100%">
				<thead>
					<tr style="vertical-align: top;">
						<th>#</th>
						<th>Serial Number</th>
						<th>Street Address</th>
						<th>Barangay</th>
						<th>Family Size</th>
						<th></th>
					</tr>
				</thead>

				<tbody>
					@{ var counter = 1; }
					@foreach (var item in Model.listFamily)
					{
						<tr>
							<td width="5%">@counter</td>
							<td width="20%">@item.serialNum</td>
							<td width="20%">@item.streetAddress</td>
							<td width="20%">@item.barangayName</td>
							<td width="15%"></td>
							<td width="10%">
								<!-- View button -->
								<a class="btn btn-success edit-button" href="/family/profile/index?familyID=@item.familyID">
									View
								</a>
							</td>
						</tr>
						counter++;
					}
				</tbody>
			</table>
		</div>
	</div>
</div>


<!-- Making the table responsive -->
<script>
	$(document).ready(function () {
		var table = $('#family-table').DataTable({
			responsive: true,
			columnDefs: [
				{ "orderable": true, "targets": [0, 1, 2, 4] }, // Sortable columns
				{ "orderable": false, "targets": [3, 5] } // Non-sortable columns
			]
		});

		// Adding filters to specific columns
		table.columns([3]).every(function () {
			var column = this;
			var select = $('<select><option value=""></option></select>')
				.appendTo($(column.header()))
				.on('change', function () {
					var val = $.fn.dataTable.util.escapeRegex(
						$(this).val()
					);

					column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
				});

			column.data().unique().sort().each(function (d, j) {
				select.append('<option value="' + d + '">' + d + '</option>');
			});
		});
	});
</script>