@page
@model AgapayAidSystem.Pages.Family.IndexModel
@{
	ViewData["Title"] = "Family";
}

<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<style>
	a {
		text-decoration: none;
		color: inherit;
	}

	.button-spacing {
		margin-right: 10px; /* Adjust the margin value as needed */
	}

	/* Adjust the size of the DataTable search input */
	div.dataTables_wrapper div.dataTables_filter input {
		width: 150px;
		margin-right: 10px;
	}
</style>


<!-- Breadcrumb -->
<div class="row pb-2" aria-label="breadcrumb">
	<nav style="--bs-breadcrumb-divider: '/';" aria-label="breadcrumb">
		<ol class="breadcrumb">
			<li class="breadcrumb-item"><a href="/index"><i class="bi bi-house-door-fill" style="padding: 5px;"></i>Home</a></li>
			<li class="breadcrumb-item active"><a><strong>Family</strong></a></li>
		</ol>
	</nav>
</div>

<!-- Title and Add Button -->
<div class="row mb-2">
	<form method="POST">
		<div class="col-12 d-flex align-items-center justify-content-between">
			<h1><i class="bi bi-people-fill" style="padding: 0 5px 0 5px;"></i>Family</h1>

			<div class="d-flex justify-content-end align-items-center">
				<a class="btn btn-primary mb-2 button-spacing d-none d-sm-inline" href="#" id="importCsvButton">
					@*<i class="bi bi-box-arrow-up"></i> Upload CSV*@
					<i class="bi bi-upload" style="padding: 5px;"></i> Upload CSV
				</a>
				<input type="file" id="csvInput" accept=".csv" style="display:none" onchange="handleFile()" />

				<a class="btn btn-primary mb-2 d-none d-sm-inline" href="/family/add/index">
					<i class="bi bi-plus-circle pt" style="padding: 5px;"></i> Add Family
				</a>

				<a class="btn btn-primary mb-2 button-spacing d-sm-none" href="#">
					<i class="bi bi-upload"></i>
				</a>
				<a class="btn btn-primary mb-2 d-sm-none" href="/family/add/index">
					<i class="bi bi-plus-circle pt" style="padding: 5px;"></i>
				</a>
			</div>
		</div>
	</form>
</div>

<!-- Table -->
<div class="row">
	<table id="family-table" class="table display compact order-column table-hover" cellspacing="0" width="100%">
		<thead>
			<tr style="vertical-align: top;">
				<th>#</th>
				<th>Serial Number</th>
				<th>Name of Family Head</th>
				<th>Barangay</th>
				<th>City/Municipality</th>
				<th style="text-align: center;">Family Size</th>
				<th></th>
			</tr>
		</thead>

		<tbody>
			@{
				var counter = 1;
			}
			@foreach (var item in Model.listFamily)
			{
				<tr>
					<td width="5%">@counter</td>
					<td width="20%">@item.serialNum</td>
					<td width="25%">@item.familyHead</td>
					<td width="15%">@item.barangayName</td>
					<td width="20%">@item.municipalityCity</td>
					<td width="5%" style="text-align: center;">@item.familySize</td>
					<td width="5%">
						<a class="btn btn-primary edit-button" href="/family/profile/index?familyID=@item.familyID">
							View
						</a>
					</td>
				</tr>
				counter++;
			}
		</tbody>
	</table>
</div>

<script>
<!--Making the table responsive-- >
	$(document).ready(function () {
		var table = $('#family-table').DataTable({
			responsive: true,
			pageLength: 25,
			columnDefs: [
				{ "orderable": true, "targets": [0, 1, 2, 4] }, // Sortable columns
				{ "orderable": false, "targets": [3, 5] } // Non-sortable columns
			]
		});

		table.columns([3]).every(function () {
			var column = this;
			var filterContainer = $('<div class="dropdown align-items-center d-inline-flex ps-2"></div>').appendTo($(column.header()));
			var btn = $('<button class="btn btn-sm btn-secondary" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="bi bi-funnel"></i></button>').appendTo(filterContainer);
			var menu = $('<div class="dropdown-menu p-3"></div>').appendTo(filterContainer);

			function updateFilterButton() {
				var hasActiveFilter = column.search() !== '';
				btn.toggleClass('btn-warning', hasActiveFilter);
			}

				function escapeRegExp(string) {
					return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
				}

			column.data().unique().sort().each(function (d, j) {
				menu.append('<div class="form-check"><input class="form-check-input" type="checkbox" value="' + d + '">' +
					'<label class="form-check-label ps-1">' + d + '</label></div>');
			});
			menu.prepend('<div class="form-check"><input class="form-check-input select-all" type="checkbox" value="select-all">' +
				'<label class="form-check-label ps-1">Select All</label></div>');

			menu.append('<hr class="dropdown-divider"><div class="p-1"><button type="button" class="btn btn-sm btn-light clear-filter"><i class="bi bi-eraser pe-1"></i>Clear Filter</button></div>');

			menu.find('.form-check-input, .clear-filter').on('click', function () {
				var checked = $(this).prop('checked');

				if ($(this).hasClass('form-check-input')) {
					if ($(this).val() === 'select-all') {
						menu.find('.form-check-input').prop('checked', checked);
					} else if (!checked) {
						menu.find('.form-check-input[value="select-all"]').prop('checked', false);
					}
				} else {
					menu.find('.form-check-input').prop('checked', false);
					menu.find('.form-check-input[value="select-all"]').prop('checked', false);
				}

				var selectedValues = menu.find('.form-check-input:checked').map(function () {
					return $(this).val();
				}).get();

					column.search(selectedValues.length > 0 ? '^(' + selectedValues.map(escapeRegExp).join('|') + ')$' : '', true, false).draw();
				updateFilterButton();
			});
			updateFilterButton();
		});
	});


	// Upload File
	document.getElementById('importCsvButton').addEventListener('click', function () {
		document.getElementById('csvInput').click();
	});

	function handleFile() {
		const fileInput = document.getElementById('csvInput');
		const file = fileInput.files[0];

		const formData = new FormData();
		formData.append('file', file);

		fetch('/family/import', {
			method: 'POST',
			body: formData
		})
			.then(response => response.json())
			.then(data => {
				console.log(data);

				// Display success message (you can modify this based on your existing structure)
				const successNotification = document.getElementById('success-notification');
				if (successNotification) {
					successNotification.innerHTML = `
						<div class="alert alert-success alert-dismissible fade show" role="alert">
							<strong>${data.message}</strong>
							<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
						</div>
					`;

					setTimeout(function () {
						successNotification.style.display = 'none';
					}, 5000); // 5000 milliseconds = 5 seconds
				}
			})
			.catch(error => {
				console.error(error);
			});
	}
</script>