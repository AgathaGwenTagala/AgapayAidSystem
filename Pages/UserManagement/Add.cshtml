@page
@model AgapayAidSystem.Pages.UserManagement.AddUserModel
@{ 
	ViewData["Title"] = "Add User";
}

@if (Model.UserType == "Admin")
{
    Layout = "_Layout";
}
else if (Model.UserType == "LGU Staff")
{
    Layout = "_Layout - LGU";
}
else if (Model.UserType == "EC Staff")
{
    Layout = "_Layout - ECStaff";
}
else
{
    Layout = "_Login";
}

<style>
    .hidden-radio {
        display: none;
    }

    .user-type-images {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

   .user-type-images img {
        width: 200px; /* Adjust the width as needed */
        height: auto;
        cursor: pointer;
        }
</style>

<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
    <div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>@Request.Query["successMessage"]</strong>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    </div>

    <script>
        const successNotification = document.getElementById('success-notification');
        if (successNotification) {
            setTimeout(function () {
                successNotification.style.display = 'none';
            }, 5000); // 5000 milliseconds = 5 seconds
        }
    </script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>Error: @Model.errorMessage</strong>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
    <div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>Error: @Request.Query["errorMessage"]</strong>
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    </div>
}

<div class="bg-light rounded px-2 py-0 my-3 text-center">
    <div class="col-lg-6 mx-auto">
        <form method="POST">
            <h1 class="display-5 fw-bold">Add New User</h1>
            <p class="form-label">Select a User Type</p>
            <br />

            <div class="mb-3 text-start user-type-images">
                <div class="form-check mb-1">
                    <input class="form-check-input visually-hidden" type="radio" name="userType" value="Admin" id="adminRadio"
                    @if (Model.userInfo.userType == "Admin")
                    {
                        <text>checked</text>
                    }>
                    <label class="form-check-label" for="adminRadio">
                        <img id="adminImage" src="/images/admin-b.png" alt="Admin" class="img-fluid" />
                    </label>
                </div>

                <div class="form-check mb-1">
                    <input class="form-check-input visually-hidden" type="radio" name="userType" value="LGU Staff" id="lguRadio"
                    @if (Model.userInfo.userType == "LGU Staff")
                    {
                        <text>checked</text>
                    }>
                    <label class="form-check-label" for="lguRadio">
                        <img id="lguImage" src="/images/lgu-b.png" alt="LGU Staff" class="img-fluid" />
                    </label>
                </div>

                <div class="form-check mb-1">
                    <input class="form-check-input visually-hidden" type="radio" name="userType" value="EC Staff" id="ecRadio"
                    @if (Model.userInfo.userType == "EC Staff")
                    {
                        <text>checked</text>
                    }>
                    <label class="form-check-label" for="ecRadio">
                        <img id="ecImage" src="/images/ec-b.png" alt="EC Staff" class="img-fluid" />
                    </label>
                </div>
            </div>
            <br />

            <input type="hidden" name="userInfo.userType" value="@Model.userInfo.userType" />
            <input type="hidden" name="userInfo.userID" value="@Model.userInfo.userID" />

            <!-- Cancel and Save Button -->
            <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
                <a href="/usermanagement/index" type="button" class="btn btn-outline-secondary px-4 gap-3" id="cancelBtn">Cancel</a>
                <button type="submit" class="btn btn-primary px-4" id="submitBtn">
                    Next
                    <i class="bi bi-arrow-right" style="padding:5px"></i>
                </button>
            </div>
        </form>
    </div>
</div>

<script>

    document.addEventListener('DOMContentLoaded', function () {
        const submitButton = document.getElementById('submitBtn');
        const form = document.querySelector('form');

        // Disable the submit button by default
        submitButton.disabled = true;

        // Function to check form validity and enable/disable the submit button
        function checkFormValidity() {
            if (form.checkValidity()) {
                submitButton.disabled = false;
            } else {
                submitButton.disabled = true;
            }
        }

        // Function to reset all image sources to their original states
        function resetImages() {
            const adminImage = document.getElementById('adminImage');
            const lguImage = document.getElementById('lguImage');
            const ecImage = document.getElementById('ecImage');

            adminImage.src = '/images/admin-b.png';
            lguImage.src = '/images/lgu-b.png';
            ecImage.src = '/images/ec-b.png';
        }

        // Add an event listener for the input event on form elements
        form.addEventListener('input', checkFormValidity);

        // Add click event listeners to the images to check the corresponding radio button
        const adminImage = document.getElementById('adminImage');
        const lguImage = document.getElementById('lguImage');
        const ecImage = document.getElementById('ecImage');

        adminImage.addEventListener('click', function () {
            resetImages(); // Reset all images
            document.getElementById('adminRadio').checked = true;
            adminImage.src = '/images/admin-w.png'; // Change the image source
            checkFormValidity();
        });

        lguImage.addEventListener('click', function () {
            resetImages(); // Reset all images
            document.getElementById('lguRadio').checked = true;
            lguImage.src = '/images/lgu-w.png'; // Change the image source
            checkFormValidity();
        });

        ecImage.addEventListener('click', function () {
            resetImages(); // Reset all images
            document.getElementById('ecRadio').checked = true;
            ecImage.src = '/images/ec-w.png'; // Change the image source
            checkFormValidity();
        });
    });
</script>

<!-- Enable/disable "Cancel" and "Add" buttons -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const cancelButton = document.getElementById('cancelBtn');
        const saveButton = document.getElementById('submitBtn');
        const form = document.querySelector('form');

        cancelButton.addEventListener('click', function (event) {
            // Change the text and styling of the Cancel button
            cancelButton.classList.add('processing-btn');
            cancelButton.innerText = 'Processing...';

            // Disable the Save button to prevent multiple submissions
            saveButton.disabled = true;

            // Redirect to the specified href after a short delay
            setTimeout(function () {
                window.location.href = cancelButton.getAttribute('href');
            }, 500);
        });

        saveButton.addEventListener('click', function () {
            // Disable both buttons to prevent multiple submissions
            cancelButton.classList.add('processing-btn');
            saveButton.disabled = true;

            // Change the text of the Save button
            saveButton.innerText = 'Processing...';

            // Submit the form
            form.submit();
        });
    });
</script>

<style>
    .processing-btn {
        pointer-events: none;
        opacity: 0.5;
    }
</style>
