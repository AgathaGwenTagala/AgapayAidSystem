@page
@model AgapayAidSystem.Pages.UserManagement.AddECStaffModel
@{
    ViewData["Title"] = "Add EC Staff User";
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        <strong>@Model.errorMessage</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container p-2 form-container">
    <div class="container mt-4 form-container-content">
        <div class="row">
            <div class="col text-center">
                <h1>Add New User</h1>
                <h6 class="text-dark">EC Staff</h6>
            </div>
        </div>
        <form method="POST">
            <div class="row mb-3 user-container">

                <input type="hidden" name="userID" value="@Model.userID" />

                <div class="row mb-3">
                    <p class="text-danger text-end">* Required field</p>
                </div>

                <!-- USER ID -->
                <div class="row mb-3 pb-1">
                    <label class="form-label">User ID: @Model.userID</label>
                </div>

                <!-- FIRST NAME -->
                <div class="row mb-3">
                    <label class="form-label">
                        First Name:
                        <span class="text-danger" style="padding:5px">*</span>
                    </label>
                    <input type="text" id="firstName" name="firstName" class="form-control" required maxlength="65" />
                </div>

                <!-- MIDDLE NAME -->
                <div class="row mb-3">
                    <label class="form-label">
                        Middle Name:
                    </label>
                    <input type="text" id="middleName" name="middleName" class="form-control" maxlength="65" />
                </div>

                <!-- LAST NAME -->
                <div class="row mb-3">
                    <label class="form-label">
                        Last Name:
                        <span class="text-danger" style="padding: 5px">*</span>
                    </label>
                    <input type="text" id="lastName" name="lastName" class="form-control" required maxlength="65" />
                </div>

                <!-- EXTENSION NAME -->
                <div class="row mb-3">
                    <label class="form-label">
                        Extension Name:
                    </label>
                    <input type="text" id="extName" name="extName" class="form-control" maxlength="45" />
                </div>

                <!-- SEX -->
                <div class="row mb-3">
                    <label class="form-label">
                        Sex:
                        <span class="text-danger" style="padding:5px">*</span>
                    </label>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="sex" id="maleRadio" value="M" required>
                        <label class="form-check-label" for="maleRadio">Male</label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="sex" id="femaleRadio" value="F" required>
                        <label class="form-check-label" for="femaleRadio">Female</label>
                    </div>
                </div>

                <!-- BIRTHDATE -->
                <div class="row mb-3">
                    <label class="form-label">
                        Birthdate:
                        <span class="text-danger" style="padding: 5px">*</span>
                    </label>
                    <input type="date" id="birthdate" name="birthdate" class="form-control" required pattern="\d{4}-\d{2}-\d{2}" />
                </div>

                <!-- MOBILE NUMBER -->
                <div class="row mb-3">
                    <label class="form-label">
                        Mobile Number:
                        <span class="text-danger" style="padding: 5px">*</span>
                    </label>
                    <input type="tel" id="mobileNum" name="mobileNum" class="form-control" required maxlength="11" pattern="[0-9]{11}" placeholder="09XXXXXXXXX" title="Enter digits only." />
                </div>

                <!-- EMAIL ADDRESS -->
                <div class="row mb-3">
                    <label class="form-label">
                        Email Address:
                        <span class="text-danger" style="padding: 5px">*</span>
                    </label>
                    <input type="email" id="emailAddress" name="emailAddress" class="form-control" required maxlength="65" placeholder="example@email.com" />
                </div>

                @if (!string.IsNullOrEmpty(Model.successMessage))
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <strong>@Model.successMessage</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <!-- CANCEL AND SAVE BUTTON -->
                <div class="button-spacer">
                    <a class="btn btn-outline-secondary mr-10" href="/UserManagement/AddECStaff?userID=@Model.userID&action=cancel&userIDToDelete=@Model.userID" role="button">
                        Cancel
                    </a>
                    <button type="submit" class="btn btn-primary" id="submitBtn">Save</button>
                </div>

            </div>
        </form>
    </div>
</div>

<script>
    const mobileInput = document.getElementById('mobileNum');

    // Add an input event listener to format the mobile number
    mobileInput.addEventListener('input', function () {
        // Remove any non-digit characters
        let cleanedValue = this.value.replace(/[^0-9]/g, '');

        // Ensure the mobile number starts with "09" if not null or empty
        if (cleanedValue.length >= 2) {
            cleanedValue = '09' + cleanedValue.slice(2);
        }

        // Update the input field with the formatted value
        this.value = cleanedValue;
    });

    const submitButton = document.getElementById('submitBtn');
    const form = document.querySelector('form');

    // Disable the submit button by default
    submitButton.disabled = true;

    // Function to check form validity and enable/disable the submit button
    function checkFormValidity() {
        if (form.checkValidity()) {
            submitButton.disabled = false;
        } else {
            submitButton.disabled = true;
        }
    }

    // Add an event listener for the input event on form elements
    form.addEventListener('input', checkFormValidity);
</script>