@page
@model AgapayAidSystem.Pages.Disaster.IndexModel
@{
	ViewData["Title"] = "Disaster";
}

@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<div class="container p-2">

	<div class="row">
		<ul class="breadcrumbs">
			<li><a href="#">Disaster</a></li>
			<li class="divider">/</li>
			<li><a href="#" class="active">Typhoon Pedro</a></li>
		</ul>

		<div class="col d-flex align-items-center">
			<h1><i class="bi bi-fire"></i>Disaster</h1>
		</div>

		<div class="col-auto d-flex justify-content-between align-items-center">
			<div class="d-flex justify-content-end align-items-center">
				<a class="btn btn-primary mb-2" href="/disaster/add"><i class="bi bi-plus-circle pt" style="padding: 5px;"></i> Add Disaster</a>
			</div>
		</div>
	</div>


	<div class="row p-2">
		<div class="col-lg-12">
			<table id="disaster-table" class="table display nowrap compact order-column" cellspacing="0" width="100%">
				<thead>
					<tr>
						<th>#</th>
						<th>Disaster</th>
						<th>Type</th>
						<th>Description</th>
						<th>Date Occured</th>
					</tr>
				</thead>

				<tbody>
					@{
						var counter = 1;
					}
					@foreach (var item in Model.listDisaster)
					{
						<tr data-id="@item.disasterID" class="data-row clickable-row">
							<td>@counter</td>
							<td>@item.disasterName</td>
							<td>@item.disasterType</td>
							<td>@item.description</td>
							<td>@item.dateOccured</td>
						</tr>
						counter++;
					}
				</tbody>
			</table>
		</div>
	</div>
</div>

<!-- Making the table responsive -->
<script>
	$(document).ready(function () {
		$('#disaster-table').DataTable({
			responsive: true,
			columnDefs: [
				{ "orderable": true, "targets": [1, 2, 4] }, // Make the first five columns sortable
				{ "orderable": false, "targets": [0, 3] } // Make the sixth column non-sortable
			]
		});
	});
</script>

<!-- Modal: Confirm Delete -->
<div class="modal" id="deleteConfirmationModal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				Are you sure you want to delete this disaster?
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
			</div>
		</div>
	</div>
</div>

<!-- Clickable Row for Disaster Profile -->
<script>
	document.addEventListener("DOMContentLoaded", function () {
		const table = document.getElementById('disaster-table');

		table.addEventListener('click', function (event) {
			const clickedRow = event.target.closest('.data-row');

			if (clickedRow) {
				const disasterId = clickedRow.getAttribute("data-id");
				if (disasterId) {
					window.location.href = `/disaster/profile/index?disasterID=${disasterId}`;
				}
			}
		});
	});
</script>

<!-- Confirm Delete button in Modal -->
<script>
	const deleteButtons = document.querySelectorAll('.edit-button');
	let disasterIdToDelete = null;

	deleteButtons.forEach(function (button) {
		button.addEventListener('click', function () {
			disasterIdToDelete = this.getAttribute('data-deleteid');
		});
	});

	// Function to prepare for delete action
	function prepareDelete(disasterID) {
		if (disasterID === null || disasterID === undefined) {
			// Retrieve disasterID from the button's data-deleteid attribute
			disasterIdToDelete = event.currentTarget.getAttribute('data-deleteid');
		} else {
			disasterIdToDelete = disasterID;
		}
	}

	const confirmDeleteButton = document.getElementById('confirmDeleteButton');

	confirmDeleteButton.addEventListener('click', function () {
		if (disasterIdToDelete !== null) {
			window.location.href = "/disaster/delete?disasterID=" + disasterIdToDelete;
		}
	});
</script>