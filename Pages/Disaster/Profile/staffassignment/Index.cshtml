@page
@model AgapayAidSystem.Pages.disaster.profile.staffassignment.IndexModel
@{
	ViewData["Title"] = "Staff Assignment";
}

<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<div class="container-fluid">
	<input type="hidden" name="centerLogID" value="@Model.logInfo.centerLogID" />
	<div class="row">
		<!-- Sidebar (desktop) -->
        <nav id="sidebar" class="col-md-3 col-lg-2 d-md-block d-none sidebar">
            <div class="position-sticky">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/informationboard/index?centerLogID=@Model.logInfo.centerLogID">Information Board</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/entrylog/index?centerLogID=@Model.logInfo.centerLogID">Entry Log</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/staffassignment/index?centerLogID=@Model.logInfo.centerLogID">Staff Assignment</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/inventory/index?centerLogID=@Model.logInfo.centerLogID">Inventory</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/reliefgoodspack/index?centerLogID=@Model.logInfo.centerLogID">Relief Goods Pack</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/reliefdistribution/index?centerLogID=@Model.logInfo.centerLogID">Relief Distribution</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/disaster/profile/vulnerabilityassessment/index?centerLogID=@Model.logInfo.centerLogID">Vulnerability Assessment</a>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Sidebar (mobile) -->
        <div id="sidebarMobile" class="col-md-3 col-lg-2 d-md-none bg-light p-2">
            <select class="form-select" id="pageSelect">
                <option value="/disaster/profile/informationboard/index?centerLogID=@Model.logInfo.centerLogID">Information Board</option>
                <option value="/disaster/profile/entrylog/index?centerLogID=@Model.logInfo.centerLogID">Entry Log</option>
                <option value="/disaster/profile/staffassignment/index?centerLogID=@Model.logInfo.centerLogID">Staff Assignment</option>
                <option value="/disaster/profile/inventory/index?centerLogID=@Model.logInfo.centerLogID">Inventory</option>
                <option value="/disaster/profile/reliefgoodspack/index?centerLogID=@Model.logInfo.centerLogID">Relief Goods Pack</option>
                <option value="/disaster/profile/reliefdistribution/index?centerLogID=@Model.logInfo.centerLogID">Relief Distribution</option>
                <option value="/disaster/profile/vulnerabilityassessment/index?centerLogID=@Model.logInfo.centerLogID">Vulnerability Assessment</option>
            </select>
        </div>

		<!-- Page Content -->
		<div class="col-md-9 ms-sm-auto col-lg-10 px-md-4 pb-3 pt-3">
			<div class="container">
				<!-- Breadcrumb -->
				<div class="row pb-2" aria-label="breadcrumb">
					<nav style="--bs-breadcrumb-divider: '/';" aria-label="breadcrumb">
						<ol class="breadcrumb">
							<li class="breadcrumb-item"><a href="/index"><i class="bi bi-house-door-fill" style="padding: 5px;"></i>Home</a></li>
							<li class="breadcrumb-item"><a href="/disaster/index">Disaster</a></li>
							<li class="breadcrumb-item"><a href="/disaster/profile/index?disasterID=@Model.logInfo.disasterID">@Model.logInfo.disasterName</a></li>
							<li class="breadcrumb-item active"><a><strong>@Model.logInfo.centerName</strong></a></li>
						</ol>
					</nav>
				</div>

				<form method="POST" id="completeAssign" style="padding: 0px;">
					<input type="hidden" name="centerLogID" value="@Model.logInfo.centerLogID" />
					<div class="row pb-2">
						<div class="col d-flex align-items-center">
							<h1>Staff Assignment</h1>
						</div>

						<!-- Add and Mark Completed Buttons -->
						<div class="col-auto d-flex justify-content-between align-items-center" style="gap: 5px">
							<a id="addButton" class="btn btn-primary mb-2" href="/disaster/profile/staffassignment/add?centerLogID=@Model.logInfo.centerLogID">
								<i class="bi bi-plus-circle pt" style="padding: 5px;"></i> Assign Staff
							</a>
							<button style="display: none;" type="button" class="btn btn-danger mb-2" name="saveSelection" data-bs-toggle="modal" data-bs-target="#confirmSaveModal" disabled>
								Mark Completed
							</button>
						</div>
					</div>

					<div class="col-lg-12">
						<table id="assignment-table" class="table display compact order-column table-hover" cellspacing="0" width="100%">
							<thead>
								<tr style="vertical-align: top;">
									<th>
										<div class="form-check">
											<input class="form-check-input" type="checkbox" id="selectAllCheckboxes">
											<label class="form-check-label"></label>
										</div>
									</th>
									<th>Name</th>
									<th>Role</th>
									<th>Date Assigned</th>
									<th>Date Completed</th>
									<th style="text-align: center;">Status</th>
									<th></th>
								</tr>
							</thead>
							<tbody>
								@foreach (var item in Model.listAssignment)
								{
									<tr>
										<td width="2%">
											<div class="form-check">
												<input class="form-check-input" type="checkbox" value="@item.assignmentID"
													   name="selectedStaff[]" @((item.status == "Completed") ? "disabled" : "")>
												<label class="form-check-label"></label>
											</div>
										</td>
										<td width="30%">@item.fullName</td>
										<td width="10%">@item.role</td>
										<td width="27%">@item.assignmentDate</td>
										<td width="26%">@item.completionDate</td>
										<td width="5%" style="text-align: center;">
											@if (@item.status == "Assigned")
											{
												<span class="badge bg-success">@item.status</span>
											}
											else if (@item.status == "Completed")
											{
												<span class="badge rounded-pill bg-light">@item.status</span>
											}
										</td>
										<td width="2%">
											<div class="d-inline position-relative">
												<a href="#" role="button" id="recordOptions" data-bs-toggle="dropdown" aria-expanded="false">
													<i class="bi bi-three-dots-vertical"></i>
												</a>
												<ul class="dropdown-menu" aria-labelledby="recordOptions">
													<li><a class="dropdown-item" href="/ecstaff/index">View Staff Profile</a></li>
													<li>
														<a href="#" class="dropdown-item text-danger" onclick="prepareDelete('@item.assignmentID')"
														   data-deleteid="@item.assignmentID" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal">
															Delete Assignment
														</a>
													</li>
												</ul>
											</div>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>

<!-- Modal: Confirm Complete Assignment -->
<div class="modal" id="confirmSaveModal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Confirm Complete Assignment</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				Are you sure you want to mark the assignment of the selected EC staff members as complete?
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmSaveButton">Mark Completed</button>
			</div>
		</div>
	</div>
</div>

<!-- Modal: Confirm Delete -->
<div class="modal" id="deleteConfirmationModal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p>Are you sure you want to delete this staff assignment record?</p>
				<p><strong class="text-danger">This cannot be undone.</strong></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
			</div>
		</div>
	</div>
</div>

<!-- Sidebar (Mobile) -->
<script>
	// Get the current page URL
	var currentPage = window.location.pathname.toLowerCase();

	// Get the select element
	var pageSelect = document.getElementById('pageSelect');

	// Loop through the options and set the selected attribute if it matches the current page
	for (var i = 0; i < pageSelect.options.length; i++) {
		if (pageSelect.options[i].value.toLowerCase().includes(currentPage)) {
			pageSelect.options[i].selected = true;
			break; // Exit the loop once the first match is found
		}
	}

	// Function to handle page redirection
	function redirectToSelectedPage() {
		var selectedOption = pageSelect.options[pageSelect.selectedIndex];
		var selectedValue = selectedOption.value;
		window.location.href = selectedValue;
	}

	// Attach the onchange event to the select element
	pageSelect.addEventListener('change', redirectToSelectedPage);
</script>

<!-- Making the table responsive -->
<script>
	$(document).ready(function () {
		var table = $('#assignment-table').DataTable({
			responsive: true,
			select: true, // select for checkbox
			columnDefs: [
				{ "orderable": true, "targets": [1, 3, 4, 5] }, // Sortable columns
				{ "orderable": false, "targets": [0, 2, 6] } // Non-sortable columns
			],
			order: [ [3, 'desc']], // Initial sorting by Assigned Date
			language: {
				emptyTable: "There are no staff members assigned at this evacuation center.",
			}
		});

		// Adding filters to specific columns
		table.columns([2, 5]).every(function () {
			var column = this;
			var select = $('<select><option value=""></option></select>')
				.appendTo($(column.header()))
				.on('change', function () {
					var val = $.fn.dataTable.util.escapeRegex(
						$(this).val()
					);

					column
						.search(val ? '^' + val + '$' : '', true, false)
						.draw();
				});

			column.data().unique().sort().each(function (d, j) {
				// Only add the options "Assigned" and "Completed" for the "Status" column
				if (column.index() === 5) {
					// Set specific filter options only if they haven't been added
					if (select.find("option[value='Assigned']").length == 0) {
						select.append('<option value="Assigned">Assigned</option>');
					}
					if (select.find("option[value='Completed']").length == 0) {
						select.append('<option value="Completed">Completed</option>');
					}
				} 
				// For other columns, show all unique values as filter options
				else {
					select.append('<option value="' + d + '">' + d + '</option>');
				}
			});
		});
	});
</script>

<!-- Select All checkboxes and Enable/disable "Check-out" button -->
<script>
	const selectAllCheckbox = document.getElementById('selectAllCheckboxes');
	const checkboxes = document.querySelectorAll('input[name="selectedStaff[]"]');
	const saveSelectionButton = document.querySelector('button[name="saveSelection"]');

	// Event listener for the "Select All" checkbox
	selectAllCheckbox.addEventListener('change', function () {
		checkboxes.forEach(checkbox => {
			if (!checkbox.disabled) {
				checkbox.checked = selectAllCheckbox.checked;
			}
		});
		updateSaveSelectionButtonState();
		updateButtonVisibility();
	});

	// Event listener for individual checkboxes
	checkboxes.forEach(checkbox => {
		checkbox.addEventListener('change', function () {
			updateSelectAllCheckboxState();
			updateSaveSelectionButtonState();
			updateButtonVisibility();
		});
	});

	// Function to show/hide "Check-in" & "Check-out" buttons
	function updateButtonVisibility() {
		const atLeastOneEnabledCheckboxChecked = Array.from(checkboxes)
			.filter(checkbox => !checkbox.disabled)
			.some(checkbox => checkbox.checked);

		const completeButton = document.querySelector('button[name="saveSelection"]');
		const addButton = document.getElementById('addButton');

		if (atLeastOneEnabledCheckboxChecked) {
			completeButton.style.display = 'block'; // Show the "Check-out Evacuee" button
			addButton.style.display = 'none'; // Hide the "Check-in Evacuee" button
		} else {
			completeButton.style.display = 'none'; // Hide the "Check-out Evacuee" button
			addButton.style.display = 'block'; // Show the Check-in Evacuee button
		}
	}

	// Hide the "Check-out Evacuee" button on page load
	window.onload = function () {
		updateButtonVisibility();
	};

	// Function to check "Select All" checkbox when all enabled checkboxes are checked
	function updateSelectAllCheckboxState() {
		const allEnabledCheckboxesChecked = Array.from(checkboxes)
			.filter(checkbox => !checkbox.disabled)
			.every(checkbox => checkbox.checked);
		selectAllCheckbox.checked = allEnabledCheckboxesChecked;
	}

	// Function to enable "Check-out" button when at least one enabled checkbox is cheked
	function updateSaveSelectionButtonState() {
		const atLeastOneEnabledCheckboxChecked = Array.from(checkboxes)
			.filter(checkbox => !checkbox.disabled)
			.some(checkbox => checkbox.checked);
		saveSelectionButton.disabled = !atLeastOneEnabledCheckboxChecked;
	}
</script>

<!-- Complete Assignment button in Modal -->
<script>
	document.getElementById('confirmSaveButton').addEventListener('click', function () {
		document.getElementById('completeAssign').submit();
	});
</script>

<!-- Confirm Delete -->
<script>
	const deleteButtons = document.querySelectorAll('.edit-button');
	let assignmentIdToDelete = null;
	let centerLogID = null;

	deleteButtons.forEach(function (button) {
		button.addEventListener('click', function () {
			assignmentIdToDelete = this.getAttribute('data-deleteid');
		});
	});

	// Function to prepare for delete action
	function prepareDelete(assignmentID) {
		if (assignmentID === null || assignmentID === undefined) {
			// Retrieve assignmentID from the button's data-deleteid attribute
			assignmentIdToDelete = event.currentTarget.getAttribute('data-deleteid');
		} else {
			assignmentIdToDelete = assignmentID;
		}

		// Retrieve centerLogID from the query string
		const urlParams = new URLSearchParams(window.location.search);
		centerLogID = urlParams.get("centerLogID");
	}

	const confirmDeleteButton = document.getElementById('confirmDeleteButton');

	confirmDeleteButton.addEventListener('click', function () {
		if (assignmentIdToDelete !== null) {
			window.location.href = "/disaster/profile/staffassignment/delete?assignmentID=" + assignmentIdToDelete + "&centerLogID=" + centerLogID;
		}
	});
</script>