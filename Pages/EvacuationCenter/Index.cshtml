@page
@model AgapayAidSystem.Pages.EvacuationCenter.IndexModel
@{
	ViewData["Title"] = "Evacuation Center";
}

<style>
	a {
		text-decoration: none;
		color: inherit;
	}
</style>

<div class="container p-2">
	<div class="row pt-3">
		<div class="col">	
			<div style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
				<ol class="breadcrumb">
					<li class="breadcrumb-item"><a class="nav-link text-muted" asp-area="" asp-page="/Index"><i class="bi bi-house-door-fill" style="padding: 5px;"></i>Home</a></li>
					<li class="breadcrumb-item active" aria-current="page" style="color: #3F8F8B;"><strong>Evacuation Center</strong></li>
				</ol>
			</div>

			<!-- Search Bar -->
			<form id="search-form">
				<div class="input-group">
					<input type="search" class="form-control ds-input" id="search-bar" placeholder="Search here..." aria-label="Search..." autocomplete="off" role="combobox" aria-autocomplete="list" aria-expanded="false" aria-owns="algolia-autocomplete-listbox-0" dir="auto" style="position: relative; vertical-align: top;">
					<button type="submit" class="btn btn-primary" id="search-button"><i class="bi bi-search"></i></button>
				</div>
			</form>
		</div>
	</div>


	<div class="row pt-4">
		<div class="col">
			<h1>Evacuation Center</h1>
		</div>

		<div class="col-auto">
			<div class="d-flex justify-content-end align-items-center">
				<a class="btn btn-primary mb-2" href="/EvacuationCenter/AddEvacuationCenter"><i class="bi bi-plus-circle pt" style="padding: 5px;"></i> Add Evacuation Center</a>
			</div>
		</div>
	</div>

	<div class="table-responsive">
		<table class="table align-middle table-hover" id="evacuation-table" style="width:100%">
			<thead>
				<tr>
					<th>
						<a asp-page="./Index" asp-route-sortBy="centerName" asp-route-sortOrder="@(Model.SortBy == "centerName" && Model.SortOrder == "asc" ? "desc" : "asc")" onclick="toggleArrowIcons('centerName')">
							Evacuation Center Name
							<ion-icon id="centerNameArrow" name="@(Model.SortBy == "centerName" && Model.SortOrder == "asc" ? "arrow-up-outline" : "arrow-down-outline")"></ion-icon>
						</a>
					</th>
					<th>Barangay</th>
					<th>
						<a asp-page="./Index" asp-route-sortBy="maxCapacity" asp-route-sortOrder="@(Model.SortBy == "maxCapacity" && Model.SortOrder == "asc" ? "desc" : "asc")" onclick="toggleArrowIcons('maxCapacity')">
							Capacity
							<ion-icon id="maxCapacityArrow" name="@(Model.SortBy == "maxCapacity" && Model.SortOrder == "asc" ? "arrow-up-outline" : "arrow-down-outline")"></ion-icon>
						</a>
					</th>
					<th>
						<a asp-page="./Index" asp-route-sortBy="status" asp-route-sortOrder="@(Model.SortBy == "status" && Model.SortOrder == "asc" ? "desc" : "asc")" onclick="toggleArrowIcons('status')">
							Status
							<ion-icon id="statusArrow" name="@(Model.SortBy == "status" && Model.SortOrder == "asc" ? "arrow-up-outline" : "arrow-down-outline")"></ion-icon>
						</a>
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model.listEvacuation)
				{
					<tr>
						<td width="30%">@item.centerName</td>
						<td width="10%">@item.barangayID</td>
						<td width="15%">@item.maxCapacity</td>
						<td width="15%">
							@if (@item.status == "Active")
							{
								<span class="badge bg-success">Active</span>
							}
							else if (@item.status == "Inactive")
							{
								<span class="badge rounded-pill bg-light">Inactive</span>
							}
						</td>
						<td width="20%">
							<!-- Disaster Log button -->
							<button class="btn btn-dark"><i class="bi bi-card-list"></i></button>
							
							<!-- Edit button -->
							<a class="btn btn-success edit-button" href="/EvacuationCenter/EditEvacuationCenter?centerID=@item.centerID">
								<i class="bi bi-pencil-fill"></i>
							</a>

							<!-- Delete button -->
							<a href="#" class="btn btn-danger edit-button" data-bs-toggle="modal" data-bs-target="#deleteEvacuationCenterModal" data-centerid="@item.centerID">
								<i class="bi bi-trash-fill"></i>Delete
							</a>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<!-- Modal -->
<div class="modal fade" id="deleteEvacuationCenterModal" tabindex="-1" role="dialog" aria-labelledby="deleteEvacuationCenterModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteEvacuationCenterModalLabel">Confirm Deletion</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p>Are you sure you want to delete this evacuation center?</p>
				<input type="hidden" id="deleteCenterID" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" onclick="confirmDelete()">Delete</button>
			</div>
		</div>
	</div>
</div>

<script>
	function confirmDelete(centerID) {
		if (confirm("Are you sure you want to delete this evacuation center?")) {
			window.location.href = "/EvacuationCenter/DeleteEvacuationCenter?centerID=" + centerID;
		}
	}
</script>


<script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
<script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>
<script>
	// Sort by
	let lastClickedHeader = null;

	function toggleArrowIcons(header) {
		// Get the arrow icons for all headers
		const centerNameArrow = document.getElementById('centerNameArrow');
		const maxCapacityArrow = document.getElementById('maxCapacityArrow');
		const statusArrow = document.getElementById('statusArrow');

		// Determine which header was clicked and toggle the arrow icons accordingly
		if (header === 'centerName') {
			centerNameArrow.style.display = centerNameArrow.style.display === 'none' ? 'block' : 'none';
			maxCapacityArrow.style.display = 'none';
			statusArrow.style.display = 'none';
		} else if (header === 'maxCapacity') {
			centerNameArrow.style.display = 'none';
			maxCapacityArrow.style.display = maxCapacityArrow.style.display === 'none' ? 'block' : 'none';
			statusArrow.style.display = 'none';
		} else if (header === 'status') {
			centerNameArrow.style.display = 'none';
			maxCapacityArrow.style.display = 'none';
			statusArrow.style.display = statusArrow.style.display === 'none' ? 'block' : 'none';
		}

		// Update the last clicked header
		lastClickedHeader = header;
	}

	// Confirm to delete
	function confirmDelete(centerID) {
		if (confirm("Are you sure you want to delete this evacuation center?")) {
			window.location.href = "/EvacuationCenter/DeleteEvacuationCenter?centerID=" + centerID;
		}
	}

	// Search function
	document.addEventListener("DOMContentLoaded", function () {
		document.getElementById("search-form").addEventListener("submit", function (e) {
			e.preventDefault();
			const query = document.getElementById("search-bar").value;
			fetch(`/EvacuationCenter?handler=Search&query=${query}`)
				.then(response => response.json())
				.then(data => {
					// Clear existing table rows
					const tableBody = document.querySelector("table tbody");
					tableBody.innerHTML = "";

					// Iterate through the search results and add new rows to the table
					data.forEach(result => {
						const newRow = `<tr>
									<td width="30%">${result.centerName}</td>
									<td width="15%">${result.barangayID}</td>
									<td width="15%">${result.maxCapacity}</td>
									<td width="15%">${result.status}</td>
									<td width="20%">
										<!-- Disaster Log button -->
										<button class="btn btn-dark"><i class="bi bi-card-list"></i></button>

										<!-- Edit button -->
											<a class="btn btn-success edit-button" href="/EvacuationCenter/EditEvacuationCenter?centerID=${result.centerID}">
											<i class="bi bi-pencil-fill"></i>
										</a>

										<!-- Delete button -->
											<a class="btn btn-danger edit-button" href="#" onclick="confirmDelete(${result.centerID})">
											<i class="bi bi-trash-fill"></i>
										</a>
									</td>
								</tr>`;
						tableBody.innerHTML += newRow;
					});
				})
				.catch(error => {
					console.error("Error:", error);
				});
		});
	});
</script>

