@page
@model AgapayAidSystem.Pages.EvacuationCenter.AddEvacuationCenterModel
@{
	ViewData["Title"] = "Add Evacuation Center";
}

@if (Model.UserType == "Admin")
{
	Layout = "_Layout";
}
else if (Model.UserType == "LGU Staff")
{
	Layout = "_Layout - LGU";
}
else if (Model.UserType == "EC Staff")
{
	Layout = "_Layout - ECStaff";
}
else
{
	Layout = "_Login";
}

<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<style>
	.input-facility {
		width: 100px;
	}

	.label-facility {
		padding-top: 10px;
		padding-left: 10px;
	}
</style>

<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>


<div class="bg-light rounded px-2 py-0 my-3 text-center">
	<div class="col-lg-8 mx-auto"> <!--NOTE: Labels are longer so column sizes here are larger-->

		<h1 class="display-5 fw-bold pt-3">Add Evacuation Center</h1>

		<!-- Add this before your form -->
		<div id="map" style="height: 300px;"></div>

		<form method="POST">
			<!-- Evacuation Center Name -->
			<div class="row mb-1">
				<label class="col-sm-4 col-form-label text-start" for="centerName">Evacuation Center Name:<span class="text-danger" style="padding:5px">*</span></label>
				<div class="col-sm-8">
					<input type="text" class="form-control" name="centerName" value="@Model.evacuationInfo.centerName" required maxlength="65" />
				</div>
			</div>

			<!-- Evacuation Center Name -->
			<div class="row mb-1">
				<label class="col-sm-4 col-form-label text-start" for="centerType">Type of Evacuation Center:<span class="text-danger" style="padding:5px">*</span></label>
				<div class="col-sm-8">
					<select class="form-select" name="centerType" required>
						<option value="" selected disabled>Select Evacuation Center Type</option>
						<option value="School EC">School EC</option>
						<option value="Barangay Designated EC">Barangay Designated EC</option>
					</select>
				</div>
			</div>

			<!-- Street Address -->
			<div class="row mb-1">
				<label class="col-sm-4 col-form-label text-start" for="streetAddress">Street Address:<span class="text-danger" style="padding:5px">*</span></label>
				<div class="col-sm-8">
					<div class="input-group mb-3">
						<span class="input-group-text" id="mapIcon"><i class="bi bi-geo-alt"></i></span>
						<input type="text" class="form-control" name="streetAddress" value="@Model.evacuationInfo.streetAddress" required maxlength="85" placeholder="Enter your address" />
					</div>
				</div>
			</div>

			<!-- Barangay -->
			<div class="row mb-1">
				<label class="col-sm-4 col-form-label text-start" for="barangayID">Barangay:<span class="text-danger" style="padding:5px">*</span></label>
				<div class="col-sm-8">
					<select class="form-select" name="barangayID" id="barangayID" required>
						<option value="" selected disabled>Select Barangay</option>
						@if (Model.Barangays != null)
						{
							@foreach (var type in Model.Barangays)
							{
								<option value="@type.barangayID">@type.barangayName</option>
							}
						}
					</select>
				</div>
			</div>

			<!-- Mobile Number -->
			<div class="row mb-1">
				<label class="col-sm-4 col-form-label text-start" for="barangayID">Mobile Number:</label>
				<div class="col-sm-8">
					<input type="tel" class="form-control" name="mobileNum" id="mobileNum" value="@Model.evacuationInfo.mobileNum" placeholder="09XXXXXXXXX" maxlength="11" pattern="[0-9]{11}" title="Enter digits only." />
				</div>
			</div>

			<!-- Telephone Number -->
			<div class="row mb-1">
				<label class="col-sm-4 col-form-label text-start" for="telephoneNum">Telephone Number:</label>
				<div class="col-sm-8">
					<input type="tel" class="form-control" name="telephoneNum" id="telephoneNum" value="@Model.evacuationInfo.telephoneNum" placeholder="02XXXXYYYY" maxlength="10" pattern="[0-9]{10}" title="Enter digits only." />
				</div>
			</div>

			<!-- Maximum Capacity -->
			<div class="row mb-1">
				<label class="col-sm-4 col-form-label text-start" for="maxCapacity">Maximum Capacity:<span class="text-danger" style="padding: 5px">*</span></label>
				<div class="col-sm-8">
					<input type="number" class="form-control" name="maxCapacity" value="@Model.evacuationInfo.maxCapacity" required min="1" />
				</div>
			</div>

			<hr class="my-4" />

			<h4 class="text-start ">Available Facilities<span class="text-danger" style="padding: 5px">*</span></h4>
			<p class="pb-2 text-start"><i>Fill the input boxes with the number of available facilities in the evacuation center</i></p>

			<div class="row">
				<!-- Toilets -->
				<div class="row mb-1">
					<div class="d-flex align-items-center">
						<input type="number" class="form-control input-facility" name="toilet" value="@Model.evacuationInfo.toilet" placeholder="0" step="1" min="0" required />
						<label class="form-label label-facility">Toilets</label>
					</div>
				</div>

				<!-- Bathing Cubicle -->
				<div class="row mb-1">
					<div class="d-flex align-items-center">
						<input type="number" class="form-control input-facility" name="bathingCubicle" value="@Model.evacuationInfo.bathingCubicle" placeholder="0" step="1" min="0" required />
						<label class="form-label label-facility">Bathing Cubicle</label>
					</div>
				</div>

				<!-- Community Kitchen -->
				<div class="row mb-1">
					<div class="d-flex align-items-center">
						<input type="number" class="form-control input-facility" name="communityKitchen" value="@Model.evacuationInfo.communityKitchen" placeholder="0" step="1" min="0" required />
						<label class="form-label label-facility">Community Kitchen</label>
					</div>
				</div>

				<!-- Washing Area -->
				<div class="row mb-1">
					<div class="d-flex align-items-center">
						<input type="number" class="form-control input-facility" name="washingArea" value="@Model.evacuationInfo.washingArea" placeholder="0" step="1" min="0" required />
						<label class="form-label label-facility">Washing Area</label>
					</div>
				</div>

				<!-- Women-Friendly and Child-Friendly spaces -->
				<div class="row mb-1">
					<div class="d-flex align-items-center">
						<input type="number" class="form-control input-facility" name="womenChildSpace" value="@Model.evacuationInfo.womenChildSpace" placeholder="0" step="1" min="0" required />
						<label class="form-label label-facility text-start">Women-Friendly and Child-Friendly spaces</label>
					</div>
				</div>

				<!-- Multipurpose Areas -->
				<div class="row mb-1">
					<div class="d-flex align-items-center">
						<input type="number" class="form-control input-facility" name="multipurposeArea" value="@Model.evacuationInfo.multipurposeArea" placeholder="0" step="1" min="0" required />
						<label class="form-label label-facility">Multipurpose Areas</label>
					</div>
				</div>
			</div>


			<br />

			<!-- Cancel and Save Button -->
			<div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
				<a href="/evacuationcenter/index" type="button" class="btn btn-outline-secondary px-4 gap-3" id="cancelBtn">Cancel</a>
				<button type="submit" class="btn btn-primary px-4" id="submitBtn">Add</button>
			</div>
		</form>
	</div>
</div>


<!-- Format Mobile and Telephone Number -->
<script>
	const mobileInput = document.getElementById('mobileNum');
	const telephoneInput = document.getElementById('telephoneNum');

	// Set initial values when the input fields receive focus
	mobileInput.addEventListener('focus', function () {
		if (!this.value.startsWith('09')) {
			this.value = '09';
		}
	});

	telephoneInput.addEventListener('focus', function () {
		if (!this.value.startsWith('02')) {
			this.value = '02';
		}
	});

	mobileInput.addEventListener('input', function () {
		let cleanedValue = this.value.replace(/[^0-9]/g, '');

		if (cleanedValue.length >= 2) {
			cleanedValue = '09' + cleanedValue.slice(2);
		}

		this.value = cleanedValue.slice(0, 11);
	});

	telephoneInput.addEventListener('input', function () {
		let cleanedValue = this.value.replace(/[^0-9]/g, '');

		if (cleanedValue.length >= 2) {
			cleanedValue = '02' + cleanedValue.slice(2);
		}

		this.value = cleanedValue.slice(0, 10);
	});
</script>

<!-- Enable/disable "Submit" button -->
<script>
	const submitButton = document.getElementById('submitBtn');
	const form = document.querySelector('form');

	submitButton.disabled = true;

	function checkFormValidity() {
		if (form.checkValidity()) {
			submitButton.disabled = false;
		} else {
			submitButton.disabled = true;
		}
	}

	form.addEventListener('input', checkFormValidity);
</script>

<!-- Enable/disable "Cancel" and "Add" buttons -->
<script>
	document.addEventListener('DOMContentLoaded', function () {
		const cancelButton = document.getElementById('cancelBtn');
		const saveButton = document.getElementById('submitBtn');
		const form = document.querySelector('form');

		cancelButton.addEventListener('click', function (event) {
			// Change the text and styling of the Cancel button
			cancelButton.classList.add('processing-btn');
			cancelButton.innerText = 'Processing...';

			// Disable the Save button to prevent multiple submissions
			saveButton.disabled = true;

			// Redirect to the specified href after a short delay
			setTimeout(function () {
				window.location.href = cancelButton.getAttribute('href');
			}, 500);
		});

		saveButton.addEventListener('click', function () {
			// Disable both buttons to prevent multiple submissions
			cancelButton.classList.add('processing-btn');
			saveButton.disabled = true;

			// Change the text of the Save button
			saveButton.innerText = 'Processing...';

			// Submit the form
			form.submit();
		});
	});
</script>

<script>
	// Define the bounds for Paranaque
	var paranaqueBounds = L.latLngBounds(
		L.latLng(14.4245, 120.9762), // Southwest corner
		L.latLng(14.5339, 121.0670)  // Northeast corner
	);

	var map = L.map('map', {
		maxBounds: paranaqueBounds,
		minZoom: 12, // You may adjust this to control the minimum zoom level
		maxZoom: 18 // You may adjust this to control the maximum zoom level
	}).setView([14.4793, 121.0190], 12); // Set the initial view to Paranaque

	L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
		attribution: '© OpenStreetMap contributors'
	}).addTo(map);

	var marker = L.marker([14.4793, 121.0190]).addTo(map)
		.bindPopup('Paranaque, Philippines')
		.openPopup();

	map.on('click', function (e) {
		var lat = e.latlng.lat;
		var lng = e.latlng.lng;

		fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
			.then(response => response.json())
			.then(data => {
				// Extract relevant parts of the address
				var addressElements = [
					data.address.road
					// You can add more elements if needed
				];

				// Remove unwanted elements
				var filteredAddress = addressElements.filter(Boolean).join(', ');

				// Update the input field with the modified address
				document.querySelector('input[name="streetAddress"]').value = filteredAddress;
			})
			.catch(error => console.error('Error fetching address:', error));

		marker.setLatLng(e.latlng).bindPopup('Selected Location').openPopup();
	});

	var searchControl = L.Control.geocoder({
		defaultMarkGeocode: false
	}).on('markgeocode', function (e) {
		map.fitBounds(e.geocode.bbox);
	}).addTo(map);
</script>

<style>
	.processing-btn {
		pointer-events: none;
		opacity: 0.5;
	}
</style>
