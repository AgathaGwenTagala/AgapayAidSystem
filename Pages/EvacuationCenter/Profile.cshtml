@page
@model AgapayAidSystem.Pages.EvacuationCenter.EvacuationCenterProfileModel
@{
	string pageTitle = $"{Model.evacuationInfo.centerName}";
	ViewData["Title"] = pageTitle;
}

<!-- Alert Banners -->
@if (!string.IsNullOrEmpty(Request.Query["successMessage"]))
{
	<div id="success-notification" class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<strong>@Request.Query["successMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>

	<script>
		const successNotification = document.getElementById('success-notification');
		if (successNotification) {
			setTimeout(function () {
				successNotification.style.display = 'none';
			}, 5000); // 5000 milliseconds = 5 seconds
		}
	</script>
}

@if (!string.IsNullOrEmpty(Model.errorMessage))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Model.errorMessage</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

@if (!string.IsNullOrEmpty(Request.Query["errorMessage"]))
{
	<div class="position-fixed top-0 end-0 p-3" style="z-index: 1000;">
		<div class="alert alert-warning alert-dismissible fade show" role="alert">
			<strong>Error: @Request.Query["errorMessage"]</strong>
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	</div>
}

<!-- Breadcrumb -->
<div class="row pb-2" aria-label="breadcrumb">
    <nav style="--bs-breadcrumb-divider: '/';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/index"><i class="bi bi-house-door-fill" style="padding: 5px;"></i>Home</a></li>
            <li class="breadcrumb-item"><a href="EvacuationCenter/index">Evacuation Center</a></li>
			<li class="breadcrumb-item active"><a><strong>@Model.evacuationInfo.centerName</strong></a></li>
        </ol>
    </nav>
</div>

<input type="hidden" name="centerID" value="@Model.evacuationInfo.centerID" />

<div class="row align-items-center">
	<h1 class="col-10 display-5 fw-bold">@Model.evacuationInfo.centerName</h1>
	<div class="col-2 text-end">
		<div class="col-auto button-spacer">
			<div class="d-inline position-relative">
				<a href="#" role="button" id="" data-bs-toggle="dropdown" aria-expanded="false">
					<i class="bi bi-three-dots-vertical"></i>
				</a>
				<ul class="dropdown-menu" aria-labelledby="recordOptions">
					<li>
						<a class="dropdown-item" href="/evacuationcenter/edit?centerID=@Model.evacuationInfo.centerID">Edit</a>
					</li>
					<li>
						<a href="#" class="text-danger dropdown-item" onclick="prepareDelete('@Model.evacuationInfo.centerID')"
						   data-deleteid="@Model.evacuationInfo.centerID" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal">
							Delete
						</a>
					</li>
				</ul>
			</div>
		</div>
	</div>
</div>
	
<br />

<div class="row">
	<div class="col-md-6 col-lg-7">
		<h4 class="d-flex justify-content-between align-items-center mb-3">Center Details:</h4>

		<ul class="list-group mb-3">
			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Type</h6></div>
				<span>@Model.evacuationInfo.centerType</span>
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Street Address</h6></div>
				<span>@Model.evacuationInfo.streetAddress, Brgy. @Model.evacuationInfo.barangayName</span>
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Mobile Number</h6></div>
				@if (!string.IsNullOrEmpty(Model.evacuationInfo.mobileNum))
				{
					<span>@Model.evacuationInfo.mobileNum</span>

				}
				else
				{
					<text>N/A</text>
				}
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Telephone Number</h6></div>
				@if (!string.IsNullOrEmpty(Model.evacuationInfo.telephoneNum))
				{
					<span>@Model.evacuationInfo.telephoneNum</span>

				}
				else
				{
					<text>N/A</text>
				}
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Max Capacity</h6></div>
				<span>@Model.evacuationInfo.maxCapacity</span>
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Status</h6></div>
				<span class="badge bg-success">
					@if (@Model.evacuationInfo.status == "Active")
					{
						<span class="badge bg-success">@Model.evacuationInfo.status</span>
					}
					else if (@Model.evacuationInfo.status == "Inactive")
					{
						<span class="badge rounded-pill bg-light">@Model.evacuationInfo.status</span>
					}
				</span>
			</li>
		</ul>
	</div>

	<div class="col-md-6 col-lg-5 order-md-last">
		<h4 class="d-flex justify-content-between align-items-center mb-3">Facilities</h4>

		<ul class="list-group mb-3">
			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Toilets</h6></div>
				<span class="text-muted">@Model.evacuationInfo.toilet</span>
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Bathing Cubicle</h6></div>
				<span class="text-muted">@Model.evacuationInfo.bathingCubicle</span>
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Community Kitchen</h6></div>
				<span class="text-muted">@Model.evacuationInfo.communityKitchen</span>
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Washing Area</h6></div>
				<span class="text-muted">@Model.evacuationInfo.washingArea</span>
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Women-Friendly and Child-Friendly Spaces</h6></div>
				<span class="text-muted">@Model.evacuationInfo.womenChildSpace</span>
			</li>

			<li class="list-group-item d-flex justify-content-between lh-sm">
				<div><h6 class="my-0">Multipurpose Area </h6></div>
				<span class="text-muted">@Model.evacuationInfo.multipurposeArea</span>
			</li>
		</ul>
	</div>
</div>

<!-- Table -->
<h4 class="d-flex justify-content-between align-items-center mb-3">Disaster Log:</h4>
<table id="distribution-table" class="table display compact order-column table-hover" cellspacing="0" width="100%">
	<thead>
		<tr>
			<th>#</th>
			<th>Disaster</th>
			<th>Type</th>
			<th>Date Occured</th>
			<th> </th>
		</tr>
	</thead>

	<tbody>
		@{
			var counter = 1;
		}
		@foreach (var item in Model.listDisaster)
		{
			<tr>
				<td>@counter</td>
				<td>@item.disasterName</td>
				<td>@item.disasterType</td>
				<td>@item.dateOccured</td>
				<td>
					<a class="btn btn-success edit-button">
						View
					</a>
				</td>
			</tr>
			counter++;
		}
	</tbody>
</table>

<!-- Modal: Confirm Delete -->
<div class="modal" id="deleteConfirmationModal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				<p>Are you sure you want to delete this evacuation center?</p>
				<p><strong class="text-danger">This cannot be undone.</strong></p>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
			</div>
		</div>
	</div>
</div>

<!-- Confirm Delete button in Modal -->
<script>
	const deleteButtons = document.querySelectorAll('.edit-button');
	let centerIdToDelete = null;

	deleteButtons.forEach(function (button) {
		button.addEventListener('click', function () {
			centerIdToDelete = this.getAttribute('data-deleteid');
		});
	});

	// Function to prepare for delete action
	function prepareDelete(centerID) {
		if (centerID === null || centerID === undefined) {
			// Retrieve centerID from the button's data-deleteid attribute
			centerIdToDelete = event.currentTarget.getAttribute('data-deleteid');
		} else {
			centerIdToDelete = centerID;
		}
	}

	const confirmDeleteButton = document.getElementById('confirmDeleteButton');

	confirmDeleteButton.addEventListener('click', function () {
		if (centerIdToDelete !== null) {
			window.location.href = "/evacuationcenter/delete?centerID=" + centerIdToDelete;
		}
	});
</script>